{"data":{"site":{"siteMetadata":{"title":"℘ make now just"}},"markdownRemark":{"html":"<script async src=\"//cdn.embedly.com/widgets/platform.js\"></script>\n<p>そういやエリナー・リグビー聴いてないな。</p>\n<h1>やったこと</h1>\n<h2><code>Array#concat</code>が和型を受け取れるようにした</h2>\n<p><a class=\"embedly-card\" href=\"https://github.com/crystal-lang/crystal/pull/3775\">Fix to concat a union of arrays by MakeNowJust · Pull Request #3775 · crystal-lang/crystal</a></p>\n<p>どういう意味なのかというと、例えばこういう配列があったとする。</p>\n<div class=\"gatsby-highlight\" data-language=\"crystal\"><pre class=\"language-crystal\"><code class=\"language-crystal\">arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>この配列の型は当然<code>Array(Int32 | Char)</code>だ。</p>\n<p>そして、こういう引数で<code>concat</code>する際には上手く動作する。</p>\n<div class=\"gatsby-highlight\" data-language=\"crystal\"><pre class=\"language-crystal\"><code class=\"language-crystal\"><span class=\"token comment\"># Array(Int32)</span>\narr<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Array(Char)</span>\narr<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Array(Int32 | Char)</span>\narr<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'6'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>しかし、この場合には上手くコンパイルできない。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Array(Int32) | Array(Char)\narr.concat([7] || [&#39;7&#39;])</code></pre></div>\n<p>なぜかというと、内部で<code>Array(Int32) | Array(Char)</code>が<code>Pointer(Int32) | Pointer(Char)</code>になって、最終的に<code>Pointer(Void)</code>にキャストされようとするのだけど、ポインタの和型は任意のポインタにキャストできるわけではないのでエラーになる。これは挙動としては正しいので、どうにかして<code>concat</code>の引数が和型になるのを防がなければいけない。</p>\n<p>そのために、新しく<code>Array#concat_to</code>というメソッドを作って、<code>concat</code>の内部ではそれを呼ぶようにした。こうすることで和型の各型がばらされて呼び出される形になる。この方法を思い付いたときには結構感動した。</p>\n<h2>あきゆめくくるを始めた</h2>\n<p>買ってきたしやろうと思ってインストールした。普通に楽しいじゃん、という感じ。まだ1ルートも終わってないので何とも言えないけど。</p>","fields":{"date":"2016-12-25"},"frontmatter":{"title":"Array#concatが和型を受け取れるようにしたり、あきゆめくくるを始めたり"},"excerpt":"そういやエリナー・リグビー聴いてないな。 やったこと Array#concat が和型を受け取れるようにした Fix to concat a union of arrays by MakeNowJust · Pull Request #3775 · crystal-lang/c…"},"prev":{"fields":{"date":"2016-12-26","slug":"/post/2016-12-26-regex-matchdata-expand-spec/"},"frontmatter":{"title":"Regex::MatchDataにメソッドを追加したり、crystal tool expandのテストを書いたり"}},"next":{"fields":{"date":"2016-12-24","slug":"/post/2016-12-24-receipt-printer-iterator-flat-map/"},"frontmatter":{"title":"レシートを印刷しまくったり、Iterator#flat_mapをIteratorを返すようにしたり"}}},"pageContext":{"slug":"/post/2016-12-25-array-concat-begin-akiyumekukuru/","prevSlug":"/post/2016-12-26-regex-matchdata-expand-spec/","nextSlug":"/post/2016-12-24-receipt-printer-iterator-flat-map/"}}