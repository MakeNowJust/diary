{"data":{"site":{"siteMetadata":{"title":"℘ make now just"}},"markdownRemark":{"html":"<h1>やったこと</h1>\n<h2>Cookpadの1dayインターンで超絶技巧プログラミングをした</h2>\n<p><a href=\"https://internship.cookpad.com/2018/spring/\" class=\"embedly-card\">https://internship.cookpad.com/2018/spring/</a></p>\n<p>Cookpad 1day Spring Internship 2018の超絶技巧プログラミングコースに参加してきた。遠藤さんに会いたいなぁ、という気持ちで応募したら通ってしまったので行かざるを得なくなった。よく考えれば直近のRuby25でも遠藤さんには会えたしそれで十分だった説はある。今アホみたいに忙しいのでこんなことをしている場合じゃねえ、的な。</p>\n<p>当日、家を出る時間が悪かったらしく恵比須の到着が9:52くらいになる。10:00開始とあったのでとてもピンチだった。走ったら間に合うかと思ったけど鈍足エレベーターに足止めされたりして、結局会場に着いたのは10:01くらいだった。無念。</p>\n<p>午前中は遠藤さんによる超絶技巧プログラミングの講義だった。コードのAA化のテクニックはRuby固有なわりに、それ以降はそうでもないのはどうしてだろう、という気持ちになる。どうせRubyを使うなら<code>eval</code>使うよなぁ、と。まあボクは話を半分くらいしか聞かずQuineを書いていた。あと午前の終わりくらいにはBPEのエンコーダーを書いていた気がする。h.js用に書いたエンコーダーの方が完成度は高いんだけど、あれは書いた本人が読めない次元の謎コードな上に、読み解いてもなぜこんなに圧縮できるのかよく分からないのであまり使いたくなかった。</p>\n<p>昼食はCookpadが用意してくれた。ありがたい。ビーフストロガノフという魔人拳を繰り出しそうな料理を食べた。おしゃれだ。<br>\nなんかPietを書く人がいたり、京都から自転車でCookpad本社まで辿り着いた人がいるということが分かった。</p>\n<p>午後は自由に超絶技巧なプログラムを書いて発表する、という感じだった。13時から16時まで制作で、16時からは発表、となっていた。<br>\nボクの場合は最初の30分くらいは、3時間で書けるプログラムなんて限られているので何を作ろうかなと考えていた。アイディアは二つ。</p>\n<ol>\n<li>那珂ちゃんのAAで、実行すると2-4-11のAAになって、以降何度実行しても2-4-11になるプログラム。</li>\n<li>雛鶴あいのAAで、実行すると将棋盤の形になって以降引数で動作を与えると将棋をプレイできるプログラム。</li>\n</ol>\n<p>1はネタが古いのと、実装がそこまでの難易度ではないので完成しないと見せづらいので不採用として、2をやることにした。最近、将棋話題だしね。<br>\nそれと、本将棋を実装するとさすがに3時間じゃ厳しいので、一度Cで実装したことのある<a href=\"https://ja.wikipedia.org/wiki/%E4%BA%AC%E9%83%BD%E5%B0%86%E6%A3%8B\">京都将棋</a>にした。<br>\nここまでで30分くらい。Don Yangのコードを眺めながら色々考えていた。やっぱDon Yangすげーわ。</p>\n<p><a href=\"http://uguu.org/sources.html\" class=\"embedly-card\">http://uguu.org/sources.html</a></p>\n<p>で、ここから2時間くらいかけて、コマンドライン引数を受け取って京都将棋をプレイできるプログラムが出来上がった。相手側が可能な手から乱数で一手選ぶだけだけど、まあ出来た。なんかバグもあるような気がしたけど、この辺でコードを整形しはじめないと間に合わない気がするので、そっちに取りかかりはじめる。<br>\nこの時点で3.5Kくらいあったので、これ用のAAを今から作るのは不可能だと判断して、とりあえず迷ったときの基本として長方形に整形しはじめる。空白文字無しでも動くように調整していたので、これはすぐに出来た。しかしやはり長い気がしたので申し訳程度にBPEをかけたりもした。ちょっと縮んだので満足。</p>\n<p>できたコードはこんな感じ。全然短くないとか、<code>__END__</code>は反則じゃね、とか色々と思うところはある。もっとがんばりたかった。が、時間は有限である。</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">=</span><span class=\"token string\">\"`^\\\\ZXWUSQPOMLKJHFC@987/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>chars<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>s<span class=\"token operator\">=</span><span class=\"token string\">%q~4)`0]^..\\veZ};X.eWQ9U==S,xQHMP{|O7yMfaLlCK8nJ$pH&amp;\n&amp;FseCac@,y9x+8s[7][/puts\"eval((k=<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>k<span class=\"token punctuation\">.</span>inspect<span class=\"token delimiter tag\">}</span></span>).chars.reduce((s=%q<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>_<span class=\"token operator\">=</span><span class=\"token number\">126.</span>chr<span class=\"token delimiter tag\">}</span></span><span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>s<span class=\"token delimiter tag\">}</span></span><span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>_<span class=\"token delimiter tag\">}</span></span>).split*'')Os,c|(t=\ns.split(c)).join(t.shift)})\";ls=DATA.read.lines(chomp:true);B={?歩=>?飛,?金=>?桂,?銀=>?角,?と=>?香XR=B.i\nnZrt;I=(R.to_a+B.to_a+[['王','王']]).to_h;Hs=l71\\1^W@h_slice(2).mapO(_,l)|lFl.split('|')[1,5].mapOs|[71]\n.stripWmpty??nil:71]S'▲',72]]}Xt=->l{l.split('|')[6]&amp;.slice(1\\-1)&amp;.chars&amp;.group_by(&amp;:itClf)&amp;.transform_v\nalues(&amp;:size)||{}X$hs={true=>t[l71^],LK=>t[l72]]Xdefine_method(?r)do|cs,c|caC(cs.shift);when'moZ';fx,fy,\ntx,ty=cs.map(&amp;:to_i);ft,fk=H7fy/fx];tt,tk=H7ty/tx];tk=R[tk]||tk;H7ty/tx]=[ft,I[fk]];H7fy/fx]=[nil,\"\"];if\n(!tkWmpty?);$h7c/tk]||=0;$h7c/tk]+=1;end;when'put';k=cs.shift;$h7c/R[k]||k]-=1;x9=cs.map(&amp;:to_i);P/x]=[c\n,k]eK;abort\"unknown_command\";end;$h7true/'王']Fabort(\"You_win\");$h7LK/'王']Fabort(\"You_loC\\\");end;r(ARGV\n,true);@s=[];4.timesOx|4.timesOy|caC(P/x/^);when(nil);$h7LK]W@h_keyOk|@s&lt;&lt;['put',kU]&lt;&lt;['put',B[k]U]Xwhen\n(LK);caC(P/x/1]);when'歩';if(yS4||P+1/x/^SLK);next;end;@s&lt;&lt;['moZ'UU+1];when'飛';(1\\`W@hOn|(y+n>4||P+n/x/\n^SLK)Fbreak;@s&lt;&lt;['moZ'UU+n]X(1\\`W@hOn|(y-n&lt;0||P-n/x/^SLK)Fbreak;@s&lt;&lt;['moZ'UU-n]X(1\\`W@hOn|(J>4||P/x-n/^S\nLK)Fbreak;@s&lt;&lt;['moZ'U,J9]X(1\\`W@hOn|(x-n&lt;0||P/x-n/^SLK)Fbreak;@s&lt;&lt;['moZ'UQ-n9]Xwhen'金','と';y&lt;4F(-1\\1)W\n@hOn|(0\\`S=JFP+1/J/^!=LKF@s&lt;&lt;['moZ'U,J9+1]X[-1,1]W@hOn|(0\\`S=JFP/J/^!=LKF@s&lt;&lt;['moZ'U,J9]Xy>0FP-1/x/^!=LK\nF@s&lt;&lt;['moZ'UU-1];when'桂';y&lt;3F[-1,1]W@hOn|(0\\`S=JFP+2/J/^!=LKF@s&lt;&lt;['moZ'U,J9+2]Xwhen'銀';y&lt;4F(-1\\1)W@hOn\n|(0\\`S=JFP+1/J/^!=LKF@s&lt;&lt;['moZ'U,J9+1]Xy>0F[-1,1]W@hOn|(0\\`S=JFP-1/J]!=LKF@s&lt;&lt;['moZ'U,J9-1]Xwhen'角';(1\\\n`W@hOn|(y+n>4||J>4||P+n/J/^SLK)Fbreak;@s&lt;&lt;['moZ'U,J9+n]X(1\\`W@hOn|(y-n&lt;0||J>4||P-n/J/^SLK)Fbreak;@s&lt;&lt;['m\noZ'U,J9-n]X(1\\`W@hOn|(y+n>4||x-n&lt;0||P+n/x-n/^SLK)Fbreak;@s&lt;&lt;['moZ'UQ-n9+n]X(1\\`W@hOn|(y-n&lt;0||x-n&lt;0||P-n/\nx-n/^SLK)Fbreak;@s&lt;&lt;['moZ'UQ-n9-n]Xwhen'香';(1\\`W@hOn|(y+n>4||P+n/x/^SLK)Fbreak;@s&lt;&lt;['moZ'UU+n]Xwhen'王'\n;y&lt;4F(-1\\1)W@hOn|(0\\`S=JFP+1/J/^!=LKF@s&lt;&lt;['moZ'U,J9+1]X[-1,1]W@hOn|(0\\`S=JFP/J/^!=LKF@s&lt;&lt;['moZ'U,J9]Xy!=\n0F(-1\\1)W@hOn|(0\\`S=JFP-1/J/^!=LKF@s&lt;&lt;['moZ'U,J9-1]Xend;end}Xr(@s.sample,LK);rs=(0\\`.mapOy|\"<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>_<span class=\"token operator\">=</span><span class=\"token number\">32.</span>chr<span class=\"token delimiter tag\">}</span></span>#\n{y}<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>_<span class=\"token delimiter tag\">}</span></span>|<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>_<span class=\"token delimiter tag\">}</span></span><span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span>\\`<span class=\"token punctuation\">.</span>mapOx<span class=\"token operator\">|</span>t<span class=\"token punctuation\">,</span>k<span class=\"token operator\">=</span>P<span class=\"token operator\">/</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>t<span class=\"token punctuation\">.</span><span class=\"token keyword\">nil</span><span class=\"token operator\">?</span><span class=\"token operator\">?</span><span class=\"token number\">32.</span>chr<span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token string\">'▲'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'▽'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>k<span class=\"token delimiter tag\">}</span></span>*\"<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>_<span class=\"token delimiter tag\">}</span></span>|<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>_<span class=\"token delimiter tag\">}</span></span>\"}<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>_<span class=\"token delimiter tag\">}</span></span>|<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>_<span class=\"token delimiter tag\">}</span></span>\"Xr7^+=$h7LK]Wmp\nty?F32.chr*3||$h7LK].mapO(k,v)|k*v}.join;r74]+=$h7true]Wmpty?F32.chr*3||$h7true].mapO(k,v)|k*v}.join;put\ns\"__END__\",l70,2],rs.join(10.chr+l71]+10.chr),l71];~</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token operator\">*</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">|</span>s<span class=\"token punctuation\">,</span>c<span class=\"token operator\">|</span><span class=\"token punctuation\">(</span>t<span class=\"token operator\">=</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>shift<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n__END__\n   <span class=\"token operator\">|</span>  <span class=\"token number\">0</span>  <span class=\"token operator\">|</span>  <span class=\"token number\">1</span>  <span class=\"token operator\">|</span>  <span class=\"token number\">2</span>  <span class=\"token operator\">|</span>  <span class=\"token number\">3</span>  <span class=\"token operator\">|</span>  <span class=\"token number\">4</span>  <span class=\"token operator\">|</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n <span class=\"token number\">0</span> <span class=\"token operator\">|</span> ▽歩 <span class=\"token operator\">|</span> ▽金 <span class=\"token operator\">|</span> ▽王 <span class=\"token operator\">|</span> ▽銀 <span class=\"token operator\">|</span> ▽と <span class=\"token operator\">|</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n <span class=\"token number\">1</span> <span class=\"token operator\">|</span>     <span class=\"token operator\">|</span>     <span class=\"token operator\">|</span>     <span class=\"token operator\">|</span>     <span class=\"token operator\">|</span>     <span class=\"token operator\">|</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n <span class=\"token number\">2</span> <span class=\"token operator\">|</span>     <span class=\"token operator\">|</span>     <span class=\"token operator\">|</span>     <span class=\"token operator\">|</span>     <span class=\"token operator\">|</span>     <span class=\"token operator\">|</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n <span class=\"token number\">3</span> <span class=\"token operator\">|</span>     <span class=\"token operator\">|</span>     <span class=\"token operator\">|</span>     <span class=\"token operator\">|</span>     <span class=\"token operator\">|</span>     <span class=\"token operator\">|</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n <span class=\"token number\">4</span> <span class=\"token operator\">|</span> ▲と <span class=\"token operator\">|</span> ▲銀 <span class=\"token operator\">|</span> ▲王 <span class=\"token operator\">|</span> ▲金 <span class=\"token operator\">|</span> ▲歩 <span class=\"token operator\">|</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span></code></pre></div>\n<p>一応使い方としてはこんな感じ。</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ ruby ks.rb  move 0 4 0 3 &gt; ks2.rb # 0×4の位置にある歩兵を0×3に動かす\n$ ruby ks2.rb move 0 3 0 0 &gt; ks3.rb # 0x3の位置にある飛車を0×0に動かす\n$ ruby ks3.rb put 歩 2 1   &gt; ks4.rb # 2×1の位置に持駒の歩兵を置く\n$ ruby ks4.rb move 2 1 2 0          # 2×1の位置にある歩兵を2×0に動かす</code></pre></div>\n<p>運が良ければこれで勝てる。が、実際はかなりの確率で王が動くか2×1の位置に金か銀が来るので大体無理。</p>\n<p>このあとは発表。スネークゲームとかテトリスみたいなの作った人すごいな、と思った。ボクにあそこまでの実装力はない。というか<code>require</code>したら負けだと思ってるので作れない。<br>\nボクの発表はなんというかいい加減で申し訳なかった。京都将棋とかもうちょいちゃんと説明すべきだったと反省している。<br>\n加えて、昨日寝ている間に小人が書いてくれたらしい下のプログラムも紹介した。この辺の事情言い忘れた気がする。完全にテンパっていた。</p>\n<p>これはJavaScriptのロゴの形をしたJavaScriptのプログラムで、実行するとRubyのロゴの形をしたRubyのプログラムで、それを実行すると元のJavaScriptのコードに、というダブルQuine。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">f</span><span class=\"token operator\">=</span>s<span class=\"token operator\">=></span>x<span class=\"token operator\">=></span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>s<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">h</span><span class=\"token operator\">=</span>s<span class=\"token operator\">=></span>s<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/\\s/g</span><span class=\"token punctuation\">,</span>e<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token template-string\"><span class=\"token string\">`\nc=String.fromCharCode;q=c(96);s=h(x+'(%w[((f='+f+')=>f)()'+q\n+s+q+'])').split(e);g=([n,m,...r])=>n?c(32).repeat(n)+s.spli\nce(0,m).join(e)+g(r):c(10);console.log(\"P)(%~E$%((/~A+%$.+~&lt;\n/%/)'~90&amp;).'%$~61//%&amp;~41&amp;%%4&amp;'~10')%1&amp;)~/0',%.&amp;+~-0&amp;0%,%+~+-\n*2%)&amp;,~-%)&amp;%(',%'%.~)%))%.)&amp;%%%/~('%+%8'1~(%%$%*%4(%%0~($%&amp;%\n(%1(*&amp;.~'$%(%'%-(0%-~&amp;$%+$%%+(4%+~&amp;$$,')':%)~'.%%'@&amp;'~&amp;0$$%E\n%&amp;~)3/8&amp;$~7@''$$\".split('~').map(([...l])=>g(l.map(c=>c.char\nCodeAt()-35))).join(e))`</span></span><span class=\"token template-string\"><span class=\"token string\">`s=%w[define_method(:x){|x|s=\"#{x=x*\ne}#{c=96.chr}s=%w[#{s*e}];;eval(s*e='');x#{c}/*#{x[0..422]}*\n/\".chars;(\"_~\"*11+\">(-+-~>(*2)~>()(((*~>()(4~>(**1~>(+--~>(/\n-)~>(4)(~6&amp;'))'*)(~33'6(~50     +1*~_~_\").        split(?~).\nmap{|l|$>&lt;&lt;l.bytes.map{|n|n     -35}.ea               ch_sli\nce(2).map{|(n,m)|s.shift(n)     *e+32.     chr*(     m||0)}*\ne+10.chr};}];;eval(s*e='');     x`</span></span><span class=\"token comment\">/*((     f=s=>x=>eval(s=(h\n=s=>s.replace(/\\s/g,e=''))(     s[0])))       =>f)()`c=Strin\ng.fromCharCode;q=c(96);s=h(     x+'(%w[(          (f='+f+')=\n>f)()'+q+s+q+'])').split(e)     ;g=([n,m,...          r])=>n\n?c(32).repeat(n)+s.splice(0     ,m).join(e)+g(r):      c(10)\n;console.log(\"P)(%~   E$%(      (/~A+%    $.+~&lt;/%      /)'~9\n0&amp;).'%$~61//%&amp;~4                1&amp;%%                   4&amp;'~1\n0')%1&amp;)~/0',%.&amp;+~-             0&amp;0%,%+~              +-*2%)&amp;\n,~-%)&amp;%(',%'%.~)%))%.)&amp;%%%/~('%+%8'1~(%%$%*%4(%%0~($%&amp;%(%1(*\n&amp;.~'$%(%'%-(0%-~&amp;$%+$%%+(4%+~&amp;$$,')':%)~'.%%'@&amp;'~&amp;0$$%E%&amp;~*/</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">                                             s<span class=\"token operator\">=</span><span class=\"token operator\">%</span>w<span class=\"token punctuation\">[</span>d     ef\n                                  i  ne_me     <span class=\"token function\">thod</span><span class=\"token punctuation\">(</span><span class=\"token symbol\">:x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">|</span>x<span class=\"token operator\">|</span>\n                              s<span class=\"token operator\">=</span>\"<span class=\"token comment\">#{x=x  *           e}#{c=96</span>\n                         <span class=\"token punctuation\">.</span>chr<span class=\"token punctuation\">}</span>s<span class=\"token operator\">=</span><span class=\"token string\">%w[<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>  s<span class=\"token operator\">*</span>e<span class=\"token delimiter tag\">}</span></span>]</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>      s<span class=\"token operator\">*</span>e<span class=\"token operator\">=</span>\n                      <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>x<span class=\"token comment\">#{c}/*#{   x[0..4           22]}  *</span>\n                   <span class=\"token operator\">/</span><span class=\"token string\">\".chars;(\"</span>_<span class=\"token operator\">~</span><span class=\"token string\">\"            *11+\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">~</span><span class=\"token operator\">></span>  <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token number\">2</span>\n                 <span class=\"token punctuation\">)</span><span class=\"token operator\">~</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token operator\">~</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>   <span class=\"token number\">4</span><span class=\"token operator\">~</span>  <span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token number\">1</span><span class=\"token operator\">~</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">~</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span><span class=\"token operator\">-</span><span class=\"token punctuation\">)</span>   <span class=\"token operator\">~</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span>\n              <span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">~</span><span class=\"token number\">6</span><span class=\"token operator\">&amp;</span><span class=\"token string\">'))'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">~</span>    <span class=\"token number\">33</span>'<span class=\"token function\">6</span><span class=\"token punctuation\">(</span><span class=\"token operator\">~</span>  <span class=\"token number\">50</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token operator\">*</span><span class=\"token operator\">~</span>_<span class=\"token operator\">~</span>_\"<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sp   <span class=\"token function\">lit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">?</span><span class=\"token operator\">~</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>map<span class=\"token punctuation\">{</span><span class=\"token operator\">|</span>l<span class=\"token operator\">|</span>$<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">&lt;</span>    l<span class=\"token punctuation\">.</span>bytes<span class=\"token punctuation\">.</span>m  ap<span class=\"token punctuation\">{</span><span class=\"token operator\">|</span>n<span class=\"token operator\">|</span>n<span class=\"token operator\">-</span><span class=\"token number\">35</span><span class=\"token punctuation\">}</span>   <span class=\"token punctuation\">.</span>each_sl\n          <span class=\"token function\">ice</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>map<span class=\"token punctuation\">{</span><span class=\"token operator\">|</span><span class=\"token punctuation\">(</span>   n<span class=\"token punctuation\">,</span>m<span class=\"token punctuation\">)</span><span class=\"token operator\">|</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span>  n<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>e<span class=\"token operator\">+</span><span class=\"token number\">32.</span>c  hr<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>m<span class=\"token operator\">||</span><span class=\"token number\">0</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">*</span>e<span class=\"token operator\">+</span><span class=\"token number\">10.</span>ch       r<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>s<span class=\"token operator\">*</span>e  <span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>x   <span class=\"token punctuation\">(</span><span class=\"token operator\">%</span>w<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>f<span class=\"token operator\">=</span>s\n          <span class=\"token operator\">=</span><span class=\"token operator\">></span>      x<span class=\"token operator\">=</span><span class=\"token operator\">></span>  <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>    s<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>h<span class=\"token operator\">=</span>s<span class=\"token operator\">=</span><span class=\"token operator\">></span>s  <span class=\"token punctuation\">.</span>rep  <span class=\"token function\">lace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/\\s/g</span><span class=\"token punctuation\">,</span>\n      e<span class=\"token operator\">=</span>      <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>s  <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token operator\">></span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>      <span class=\"token punctuation\">)</span>`c  <span class=\"token operator\">=</span><span class=\"token constant\">S</span>  tring<span class=\"token punctuation\">.</span>fromCh\n     arCo  de<span class=\"token punctuation\">;</span>q<span class=\"token operator\">=</span><span class=\"token function\">c</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span>  <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">=</span><span class=\"token function\">h</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">+</span><span class=\"token string\">'(%w[((f='</span><span class=\"token operator\">+</span>f    <span class=\"token operator\">+</span><span class=\"token string\">')=>f)()'</span><span class=\"token operator\">+</span>q<span class=\"token operator\">+</span>s\n     <span class=\"token operator\">+</span>q  <span class=\"token operator\">+</span>  <span class=\"token string\">'])'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>s  <span class=\"token function\">plit</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>g<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">,</span>m<span class=\"token punctuation\">,</span><span class=\"token punctuation\">.</span>     <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>  r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token operator\">></span>n<span class=\"token operator\">?</span><span class=\"token function\">c</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n     r  epe  <span class=\"token function\">at</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>  <span class=\"token operator\">+</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>m<span class=\"token punctuation\">)</span>     <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>e   <span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token function\">g</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token symbol\">:c</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span>\n    <span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">;</span>cons  ole<span class=\"token punctuation\">.</span>  <span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\"<span class=\"token constant\">P</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token string\">%~     E$%((/~</span><span class=\"token constant\">A</span><span class=\"token operator\">+</span><span class=\"token string\">%$.+  ~&lt;/%/)'~90\n   &amp;  ).'%$</span><span class=\"token operator\">~</span><span class=\"token number\">61</span> <span class=\"token operator\">/</span><span class=\"token operator\">/</span>  <span class=\"token string\">%&amp;~41&amp;</span><span class=\"token string\">%%     4&amp;'~10')%</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span><span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token number\">0</span>'<span class=\"token punctuation\">,</span>  <span class=\"token string\">%.&amp;+~-0&amp;\n   0 %,%+~+-*2    %)&amp;,~-    %)&amp;%(',%'%.</span><span class=\"token operator\">~</span><span class=\"token punctuation\">)</span><span class=\"token string\">%))</span><span class=\"token string\">%.)&amp;%%%  /~('%+\n    %8'1~(%%$%*  %4    (%%0~($%&amp;%(%1(*&amp;.</span><span class=\"token operator\">~</span><span class=\"token string\">'$%(%'</span><span class=\"token operator\">%</span><span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token operator\">%</span>   <span class=\"token operator\">-</span><span class=\"token operator\">~</span><span class=\"token operator\">&amp;</span>$\n   <span class=\"token operator\">%</span><span class=\"token operator\">+</span>$<span class=\"token operator\">%</span><span class=\"token operator\">%</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token operator\">%</span><span class=\"token operator\">+</span><span class=\"token operator\">~</span><span class=\"token operator\">&amp;</span>$ $  <span class=\"token punctuation\">,</span><span class=\"token string\">')'</span><span class=\"token punctuation\">:</span><span class=\"token string\">%)~'.%%'@&amp;'~&amp;0$$%E%&amp;~)</span><span class=\"token number\">3</span><span class=\"token operator\">/</span><span class=\"token number\">8</span><span class=\"token operator\">&amp;</span>$<span class=\"token operator\">~</span><span class=\"token number\">7</span>  @<span class=\"token string\">''</span>\n      $$\"<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'~'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>m            <span class=\"token function\">ap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token operator\">></span><span class=\"token function\">g</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>   c\n                    <span class=\"token operator\">=</span><span class=\"token operator\">></span>c<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">35</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>e    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>`<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<p>これはRubyのロゴを作るのが大変だった。正確にはロゴっぽく見えるAAを作るのが面倒だった。まあそのおかげでAAを作る知見を得たとも言える。<br>\nそれとロゴを小さく作りすぎてRubyの方がめいっぱいになってる。一方でJavaScriptはスカスカで、3割くらいはコメントだったりする。しんどい。<br>\n実はPython、Haskell、RustのロゴのAAも用意してあって、それらも絡めたかったのだけど、ここまで実装した時点でこの大きさじゃボクの技術では他の言語を組み込むのは不可能だと諦めた。</p>\n<p>終わったあとなぜかリュックに入っていた京都将棋を見せびらかしたりして、帰宅した。帰宅途中に電車が止まったりしたので、もっと早く帰るべきだったと反省している。<br>\n帰宅してからは異常に疲れていたので寝たりした。帰宅即就寝という感じだった。</p>","fields":{"date":"2018-02-27"},"frontmatter":{"title":"Cookpadの1dayインターンで超絶技巧プログラミングをした"},"excerpt":"やったこと Cookpadの1dayインターンで超絶技巧プログラミングをした https://internship.cookpad.com/2018/spring/ Cookpad 1day Spring Internship 2018の超絶技巧プログラミングコースに参加してき…"},"prev":{"fields":{"date":"2018-02-28","slug":"/post/2018-02-28-diary/"},"frontmatter":{"title":"ポスターを作っていた"}},"next":{"fields":{"date":"2018-02-26","slug":"/post/2018-02-26-diary/"},"frontmatter":{"title":"中目黒"}}},"pageContext":{"slug":"/post/2018-02-27-diary/","prevSlug":"/post/2018-02-28-diary/","nextSlug":"/post/2018-02-26-diary/"}}