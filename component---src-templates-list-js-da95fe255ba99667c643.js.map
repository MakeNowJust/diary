{"version":3,"file":"component---src-templates-list-js-da95fe255ba99667c643.js","mappings":"kMAMA,SAASA,EAAU,GAAe,IAAf,KAACC,EAAI,KAAEC,GAAK,EAC7B,OACE,uBAAKC,UCNc,sCDOhBF,GACC,gBAAC,EAAAG,KAAI,CAACC,GAAIJ,EAAME,UCPF,sCDO8B,QAI7CF,GAAQC,GAAQ,IAChBA,GACC,gBAAC,EAAAE,KAAI,CAACC,GAAIH,EAAMC,UCfF,sCDe8B,QAMpD,CASAH,EAAUM,aAAe,CACvBL,KAAM,KACNC,KAAM,MAGR,Q,iBEcO,SAASK,EAAK,GAAsB,IAAtB,KAACC,EAAI,YAAEC,GAAY,EACtC,MAAOC,gBAAiBC,EAAO,UAAEC,GAAaH,EACxCR,EAAmB,IAAZU,EAAgB,KAAmB,IAAZA,EAAa,cAAkBA,EAAU,GAAC,IACxET,EAAOS,IAAYC,EAAY,KAAI,UAAYD,EAAU,GAAC,KAEzDE,MAAOC,EAAS,YAAEC,GAAeP,EAAKQ,KAAKC,aAC5CJ,EAAoB,IAAZF,EAAgBG,EAAS,QAAWH,EAAO,MAAMG,EAE/D,OACE,gCACE,gBAAC,IAAU,MACX,6BAAQD,GACR,wBAAMK,KAAK,cAAcC,QAASJ,IACjCd,GAAQ,wBAAMmB,IAAI,OAAOC,KAAMpB,IAC/BC,GAAQ,wBAAMkB,IAAI,OAAOC,KAAMnB,IAGtC,CA6BA,MAtFA,SAAsB,GAAsB,IAAtB,KAACM,EAAI,YAAEC,GAAY,EACvC,MAAMa,EAAQd,EAAKe,kBAAkBC,MAAMC,KAAI,QAAC,KAACC,GAAK,SACpD,sBAAIC,IAAKD,EAAKE,GAAIzB,UCXJ,4BDYZ,+BACE,0BACE,gBAAC,EAAAC,KAAI,CAACC,GAAIqB,EAAKG,OAAOC,MACpB,4BAAOJ,EAAKG,OAAOE,MAAY,KAAGL,EAAKM,YAAYnB,QAGvD,yBAAIa,EAAKO,UAER,KAGAvB,gBAAiBC,EAAO,UAAEC,GAAaH,EACxCR,EAAmB,IAAZU,EAAgB,KAAmB,IAAZA,EAAa,cAAkBA,EAAU,GAAC,IACxET,EAAOS,IAAYC,EAAY,KAAI,UAAYD,EAAU,GAAC,IAEhE,OACE,gBAAC,IAAM,KACL,2BACE,wCAAmBA,EAAO,IAAIC,EAAS,MACvC,gBAAC,EAAS,CAACX,KAAMA,EAAMC,KAAMA,IAC7B,sBAAIC,UC/BO,6BD+BmBmB,GAC9B,gBAAC,EAAS,CAACrB,KAAMA,EAAMC,KAAMA,KAIrC,C","sources":["webpack://diary/./src/components/paginator.js","webpack://diary/./src/components/paginator.module.scss","webpack://diary/./src/templates/list.js","webpack://diary/./src/templates/list.module.scss"],"sourcesContent":["import {Link} from 'gatsby';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as styles from './paginator.module.scss';\n\nfunction Paginator({prev, next}) {\n  return (\n    <div className={styles.paginator}>\n      {prev && (\n        <Link to={prev} className={styles.prevLink}>\n          prev\n        </Link>\n      )}\n      {prev && next && '|'}\n      {next && (\n        <Link to={next} className={styles.nextLink}>\n          next\n        </Link>\n      )}\n    </div>\n  );\n}\n\nPaginator.propTypes = {\n  /** Previous URL. */\n  prev: PropTypes.string,\n  /** Next URL. */\n  next: PropTypes.string,\n};\n\nPaginator.defaultProps = {\n  prev: null,\n  next: null,\n};\n\nexport default Paginator;\n","// extracted by mini-css-extract-plugin\nexport var nextLink = \"paginator-module--next-link--bd2a0\";\nexport var paginator = \"paginator-module--paginator--05f6a\";\nexport var prevLink = \"paginator-module--prev-link--9e4f4\";","import {graphql, Link} from 'gatsby';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Paginator from '../components/paginator';\nimport Layout from '../containers/layout';\nimport LayoutHead from '../containers/layout-head';\n\nimport * as styles from './list.module.scss';\n\nfunction ListTemplate({data, pageContext}) {\n  const posts = data.allMarkdownRemark.edges.map(({node}) => (\n    <li key={node.id} className={styles.post}>\n      <article>\n        <h2>\n          <Link to={node.fields.slug}>\n            <time>{node.fields.date}</time>: {node.frontmatter.title}\n          </Link>\n        </h2>\n        <p>{node.excerpt}</p>\n      </article>\n    </li>\n  ));\n\n  const {currentListPage: current, listPages} = pageContext;\n  const prev = current === 1 ? null : current === 2 ? `/` : `/list/${current - 1}/`;\n  const next = current === listPages ? null : `/list/${current + 1}/`;\n\n  return (\n    <Layout>\n      <div>\n        <h1>{`Post List [${current}/${listPages}]:`}</h1>\n        <Paginator prev={prev} next={next} />\n        <ul className={styles.posts}>{posts}</ul>\n        <Paginator prev={prev} next={next} />\n      </div>\n    </Layout>\n  );\n}\n\nListTemplate.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.shape({\n    currentListPage: PropTypes.number,\n    listPages: PropTypes.number,\n    previous: PropTypes.string,\n    next: PropTypes.string,\n  }).isRequired,\n};\n\nexport function Head({data, pageContext}) {\n  const {currentListPage: current, listPages} = pageContext;\n  const prev = current === 1 ? null : current === 2 ? `/` : `/list/${current - 1}/`;\n  const next = current === listPages ? null : `/list/${current + 1}/`;\n\n  const {title: siteTitle, description} = data.site.siteMetadata;\n  const title = current === 1 ? siteTitle : `List ${current} | ${siteTitle}`;\n\n  return (\n    <>\n      <LayoutHead />\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      {prev && <link rel=\"prev\" href={prev} />}\n      {next && <link rel=\"next\" href={next} />}\n    </>\n  );\n}\n\nexport const query = graphql`\n  query ($limit: Int!, $skip: Int!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n\n    allMarkdownRemark(sort: {fields: {slug: DESC}}, limit: $limit, skip: $skip) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n          }\n          fields {\n            slug\n            date\n          }\n          excerpt(truncate: true)\n        }\n      }\n    }\n  }\n`;\n\nexport default ListTemplate;\n","// extracted by mini-css-extract-plugin\nexport var post = \"list-module--post--70bdc\";\nexport var posts = \"list-module--posts--fa191\";"],"names":["Paginator","prev","next","className","Link","to","defaultProps","Head","data","pageContext","currentListPage","current","listPages","title","siteTitle","description","site","siteMetadata","name","content","rel","href","posts","allMarkdownRemark","edges","map","node","key","id","fields","slug","date","frontmatter","excerpt"],"sourceRoot":""}