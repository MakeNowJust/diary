{"componentChunkName":"component---src-templates-post-js","path":"/post/2020-09-19-diary/","result":{"data":{"site":{"siteMetadata":{"title":"℘ make now just"}},"markdownRemark":{"html":"<h1>やったこと</h1>\n<h2>Scala</h2>\n<p><code>Cogen</code>の型について考察している。<br>\nひどく抽象化するとこんな感じ。</p>\n<pre><code class=\"hljs language-scala\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">trait</span> <span class=\"hljs-title\">Co</span>[<span class=\"hljs-type\">F</span>[_], <span class=\"hljs-title\">A</span>] </span>{\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">co</span></span>[<span class=\"hljs-type\">B</span>](fb: <span class=\"hljs-type\">F</span>[<span class=\"hljs-type\">B</span>]): <span class=\"hljs-type\">F</span>[<span class=\"hljs-type\">A</span> => <span class=\"hljs-type\">B</span>]\n}</code></pre>\n<p>この型を使うと、<code>Functor</code>・<code>Contravariant</code>から<code>Contravariant</code>・<code>Functor</code>が導出できたりする。<br>\n対応はこんな感じ。<code>Dividible</code>は反変な<code>Applicative</code>で、<code>Decidable</code>は反変な<code>Alternative</code>。</p>\n<ul>\n<li><code>Functor[F] => Contravariant[Co[F, *]], Dividible[Co[F, *]]</code></li>\n<li><code>Applicative[F] => Decidable[Co[F, *]]</code></li>\n<li><code>Contravariant[F] => Functor[Co[F, *]], Applicative[Co[F, *]]</code></li>\n<li><code>Dividible[F] => Alternative[Co[F, *]]</code></li>\n</ul>\n<p>つまり、関手があればそれらを反変させた関手とその関手の上での積が定義できて、さらに元の関手で積が定義されていれば和が定義できる。</p>\n<p>積が自然に(ネストで)定義されていて、積が和になる、という意味でこれは指数関数に似ている。<br>\nまあ<code>B</code>を任意に取れるようにして関数を返しているのだから、当然と言えば当然な気もするけど。</p>\n<p>なんか<code>Co</code>っていうよりもっとしっくりくる名前がある気がするんだよなぁ。</p>","fields":{"date":"2020-09-19"},"frontmatter":{"title":"なんも分からん"},"excerpt":"やったこと Scala Cogenの型について考察している。 ひどく抽象化するとこんな感じ。 この型を使うと、Functor・ContravariantからContravariant・Functorが導出できたりする。 対応はこんな感じ。Dividibleは反変なApplica…"},"prev":{"fields":{"date":"2020-09-20","slug":"/post/2020-09-20-diary/"},"frontmatter":{"title":"；Dottyで型レベルQuineを書いた"}},"next":{"fields":{"date":"2020-09-18","slug":"/post/2020-09-18-diary/"},"frontmatter":{"title":"`.gitignore`を実装した"}}},"pageContext":{"slug":"/post/2020-09-19-diary/","prevSlug":"/post/2020-09-20-diary/","nextSlug":"/post/2020-09-18-diary/"}},"staticQueryHashes":["530032413"]}