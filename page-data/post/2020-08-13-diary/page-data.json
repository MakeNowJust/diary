{"componentChunkName":"component---src-templates-post-js","path":"/post/2020-08-13-diary/","result":{"data":{"site":{"siteMetadata":{"title":"℘ make now just"}},"markdownRemark":{"html":"<h1>やったこと</h1>\n<h2>ReRE</h2>\n<p><code>util</code>のせいでブラウザで読み込めないと言われた。</p>\n<p><a href=\"https://github.com/MakeNowJust/rerejs/issues/182\" class=\"embedly-card\">https://github.com/MakeNowJust/rerejs/issues/182</a></p>\n<p>それはまあ、そういう風にしているので仕方ない‥‥。<br>\n一応、rollupでブラウザ用のバンドルを吐くようにするのを作ってみたりした。</p>\n<p>色々考えた結果、<code>util.inspect.cuatom</code>は<code>Symbol.for('nodejs.util.inspect.custom')</code>で取れるんだから<code>util</code>をimportする必要がないという結論に至った。<br>\nこれでかなりよくなったのではないかと思う。感謝。</p>\n<p>ついでにv0.2.0もリリースした。</p>\n<h2>Scala</h2>\n<p>stackparse最初のベンチマーク。<br>\nさすがにparser-combinatorsよりは速かった。</p>\n<pre><code>[info] Benchmark                        Mode  Cnt     Score      Error  Units\n[info] Bench.measureFastparse          thrpt    3  2095.356 ± 2057.325  ops/s\n[info] Bench.measureParserCombinators  thrpt    3   246.877 ±   97.491  ops/s\n[info] Bench.measureStackparse         thrpt    3   396.331 ±  293.152  ops/s\n</code></pre>\n<p>オブジェクトプールとか使ってアロケーションを避ければもっと速くなるだろうけど、あんましその方向性に興味はない。<br>\nスタックマシンのアプローチをやってみたいな。</p>\n<h2>RTA in Japan 2020 Online</h2>\n<p>はじまった。<br>\nRacing Lagoonヤバい。</p>","fields":{"date":"2020-08-13"},"frontmatter":{"title":"ReRE 0.2.0を出した"},"excerpt":"やったこと ReRE utilのせいでブラウザで読み込めないと言われた。 https://github.com/MakeNowJust/rerejs/issues/182 それはまあ、そういう風にしているので仕方ない‥‥。 一応、rollupでブラウザ用のバンドルを吐くようにす…"},"prev":null,"next":{"fields":{"date":"2020-08-12","slug":"/post/2020-08-12-diary/"},"frontmatter":{"title":"stackparseつくってた"}}},"pageContext":{"slug":"/post/2020-08-13-diary/","prevSlug":null,"nextSlug":"/post/2020-08-12-diary/"}},"staticQueryHashes":["530032413"]}