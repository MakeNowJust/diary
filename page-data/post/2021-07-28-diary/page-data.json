{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/post/2021-07-28-diary/",
    "result": {"data":{"site":{"siteMetadata":{"title":"℘ make now just"}},"markdownRemark":{"html":"<h1>やったこと</h1>\n<h2>PFix</h2>\n<p>lite に <code>lite-pfix</code> というのを追加した。</p>\n<p><a href=\"https://github.com/MakeNowJust-Labo/lite/pull/27\" class=\"embedly-card\">https://github.com/MakeNowJust-Labo/lite/pull/27</a></p>\n<p>これは部分的に定義された不動点コンビネータの <code>PFix</code> を提供するライブラリ。</p>\n<p><code>f: (A => B) => PartialFunction[A, B]</code> に対して <code>PFix(f)</code> で <code>PFix[A, B]</code> 型のオブジェクトが得られる。<br>\n<code>PFix(f).toPartialFunction</code> とすると <code>f</code> に <code>f</code> の戻り値自身が渡されるような挙動になる。<br>\nつまり <code>PFix(f).toPartialFunction = f(PFix(f).toPartialFunction)</code> というわけで、この意味で <code>PFix</code> は不動点コウンビネータにになっている。</p>\n<p>一方、通常の不動点コンビネータと何が違うのかというと、<code>PartialFunction</code> のように <code>orElse</code> メソッドで合成できる。<br>\n例えば <code>PFix(f).orElse(PFix(g)).toPartialFunction</code> とすると、<code>f</code> と <code>g</code> にお互いの戻り値を <code>orElse</code> で合成した部分関数が渡ることになる。<br>\nあと <code>toFunction</code> では部分関数に処理されなかった場合のフォールバックを指定できて、<code>PFix(f).orElse(PFix(g)).toFunction(h)</code> とすると、<code>f</code> と <code>g</code> の戻り値を合成した部分関数にマッチしない場合には <code>h</code> で処理する関数が、<code>f</code> と <code>g</code> に渡ることとなる。</p>\n<p>これの何が嬉しいのかというと、<code>lite-show</code> のオブジェクトを表示用のデータに変換する関数なんかは、再帰的に呼び出されても拡張可能にしたいという要求がある。<br>\nそういうときに便利、というかそれを一般化するために作った。</p>","fields":{"date":"2021-07-28"},"frontmatter":{"title":"PFix 作ってた"},"excerpt":"やったこと PFix lite に lite-pfix というのを追加した。 https://github.com/MakeNowJust-Labo/lite/pull/27 これは部分的に定義された不動点コンビネータの PFix を提供するライブラリ。 f: (A => B)…"},"prev":{"fields":{"date":"2021-07-29","slug":"/post/2021-07-29-diary/"},"frontmatter":{"title":"はたらいていた"}},"next":{"fields":{"date":"2021-07-27","slug":"/post/2021-07-27-diary/"},"frontmatter":{"title":"ミリシタイベント最終日"}}},"pageContext":{"slug":"/post/2021-07-28-diary/","prevSlug":"/post/2021-07-29-diary/","nextSlug":"/post/2021-07-27-diary/"}},
    "staticQueryHashes": ["530032413"]}