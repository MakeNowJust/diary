{"componentChunkName":"component---src-templates-post-js","path":"/post/2024-12-09-quine-ac-day9/","result":{"data":{"site":{"siteMetadata":{"title":"℘ make now just"}},"markdownRemark":{"html":"<h1>DAY 9</h1>\n<p><a href=\"https://www.jolie-lang.org\">Jolie</a>というプログラミング言語があります。<br>\nサービスをつなげていくタイプの言語。<br>\nDAY 4に書いた<a href=\"https://ballerina.io\">Ballerina</a>に近いものがあります。</p>\n<p>独特の構文というか、初期化してない変数にいきなり色々代入できるのが面白かったです。<br>\n関数呼び出しみたいなのに括弧が2つ付いてるのは、一つがrequestで、もう一つがresponseを指定するからみたいです。</p>\n<p>Quineはこんな感じになりました。</p>\n<pre><code class=\"hljs language-lua\">from console import Console\n\nservice Quine {\n  embed Console as Console\n\n  main {\n    q[#q] = <span class=\"hljs-string\">\"from console import Console\n\nservice Quine {\n  embed Console as Console\n\n  main {\n    q[#q] = \"</span>\n    q[#q] = <span class=\"hljs-string\">\"\\\"\"</span>\n    q[#q] = <span class=\"hljs-string\">\"\\\\\"</span>\n    q[#q] = <span class=\"hljs-string\">\"    q[#q] = \"</span>\n    q[#q] = <span class=\"hljs-string\">\"    println@Console(q[0] + q[1] + q[0] + q[1])()\n    println@Console(q[3] + q[1] + q[2] + q[1] + q[1])()\n    println@Console(q[3] + q[1] + q[2] + q[2] + q[1])()\n    println@Console(q[3] + q[1] + q[3] + q[1])()\n    println@Console(q[3] + q[1] + q[4] + q[1])()\n    println@Console(q[4])()\n  }\n}\"</span>\n    println@Console(q[<span class=\"hljs-number\">0</span>] + q[<span class=\"hljs-number\">1</span>] + q[<span class=\"hljs-number\">0</span>] + q[<span class=\"hljs-number\">1</span>])()\n    println@Console(q[<span class=\"hljs-number\">3</span>] + q[<span class=\"hljs-number\">1</span>] + q[<span class=\"hljs-number\">2</span>] + q[<span class=\"hljs-number\">1</span>] + q[<span class=\"hljs-number\">1</span>])()\n    println@Console(q[<span class=\"hljs-number\">3</span>] + q[<span class=\"hljs-number\">1</span>] + q[<span class=\"hljs-number\">2</span>] + q[<span class=\"hljs-number\">2</span>] + q[<span class=\"hljs-number\">1</span>])()\n    println@Console(q[<span class=\"hljs-number\">3</span>] + q[<span class=\"hljs-number\">1</span>] + q[<span class=\"hljs-number\">3</span>] + q[<span class=\"hljs-number\">1</span>])()\n    println@Console(q[<span class=\"hljs-number\">3</span>] + q[<span class=\"hljs-number\">1</span>] + q[<span class=\"hljs-number\">4</span>] + q[<span class=\"hljs-number\">1</span>])()\n    println@Console(q[<span class=\"hljs-number\">4</span>])()\n  }\n}</code></pre>\n<p>実行は <code>jolie</code> コマンドを叩くだけです。</p>\n<pre><code class=\"hljs language-console\"><span class=\"hljs-meta prompt_\">$ </span><span class=\"bash\">jolie quine.ol | diff quine.ol -</span></code></pre>","fields":{"date":"2024-12-09"},"frontmatter":{"title":"DAY 8 - Jolie (Quine AC 2024)"},"excerpt":"DAY 9 Jolieというプログラミング言語があります。 サービスをつなげていくタイプの言語。 DAY 4に書いたBallerinaに近いものがあります。 独特の構文というか、初期化してない変数にいきなり色々代入できるのが面白かったです。 関数呼び出しみたいなのに括弧が2つ付…"},"prev":null,"next":{"fields":{"date":"2024-12-08","slug":"/post/2024-12-08-quine-ac-day8/"},"frontmatter":{"title":"DAY 8 - Harbour (Quine AC 2024)"}}},"pageContext":{"slug":"/post/2024-12-09-quine-ac-day9/","prevSlug":null,"nextSlug":"/post/2024-12-08-quine-ac-day8/"}},"staticQueryHashes":["1213933803","2548877431"],"slicesMap":{}}