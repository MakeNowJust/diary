{"componentChunkName":"component---src-templates-post-js","path":"/post/2017-07-06-diary/","webpackCompilationHash":"86f4028b870f5b140dec","result":{"data":{"site":{"siteMetadata":{"title":"℘ make now just"}},"markdownRemark":{"html":"<h1>やったこと</h1>\n<p>ジャンクガレッジで辛ラーメンを食べた。やはり辛いものは苦手だ（昨日財布を忘れた腹いせ）</p>\n<h2>配列のrotateについて</h2>\n<p>長さ<code>N</code>の配列を<code>D</code>個分rotateするには、いくつか方法がある。</p>\n<ol>\n<li>一時配列を使う方法</li>\n</ol>\n<p>  <code>D</code>個分の要素を先頭からコピーして、配列の残りの要素を先頭まで持ってきたあとコピーしたものをその後ろに追加する方法。一番直感的。<br>\n<code>N - D &#x3C; D</code>の際に<code>N - D</code>個分後ろからコピーするようにしたりすると、<code>D</code>が極端に小さい/大きい場合は十分に早いのだけど<code>D</code>が<code>N / 2</code>に近付くとかなり遅くなる。<br>\nあとin-placeじゃない。</p>\n<ol start=\"2\">\n<li>ジャグリング法</li>\n</ol>\n<p>  <code>D = 1</code>の場合、<code>0</code>番目の要素を保存しておいて、<code>1</code>番目の要素を<code>0</code>番目に移動して、<code>2</code>番目を<code>1</code>番目に移動して、を<code>N - 2</code>番目の要素まで繰り返し<code>N - 1</code>番目に保存しておいた<code>0</code>番目の要素を移動すれば完了する。<br>\nしかし<code>D >= 2</code>の場合、同じようにしようとすると、保存しておかなきゃいけない先頭の要素の数が<code>D</code>個になってしまい、in-placeにならない。そこで<code>(i + D) % N</code>番目の要素を<code>i % D</code>番目に代入したら、次は<code>(i + 2 *D) % N</code>番目の要素を<code>(i + D) % N</code>番目の要素に代入し、最初の位置の手前に戻ってきたら保存しておいた最初の要素を代入する、という風にする。すると<code>D</code>と<code>N</code>がもし互いに素なら一周すると開始位置が<code>1</code>ずれて、何周か繰り返すうちに最初の位置に戻ってくるようになり、完了する。<code>D</code>と<code>N</code>が互いに素でないなら最大公約数だけ系列が存在するので、開始位置をずらして全ての系列に対して同じことをしていけばいい。<br>\nこうすることで、in-placeで内側のループの回数は<code>N - GCD(N, D)</code>回で動く。<code>GCD(N, D)</code>が大きくなるとき（例えば<code>N</code>が2の倍数のときの<code>D = N / 2</code>のとき）に群を抜いて高速になるが、それ以外のときは全体的に遅めな気がする（ランダムアクセスすぎてキャッシュに載らない？）。</p>\n<ol start=\"3\">\n<li>ブロックスワップ、リバース</li>\n</ol>\n<p>  明日解説する。眠い。</p>\n<p>とりあえず、ブロックスワップが優秀な気がするのでこれで行きたい。</p>\n<p>重要なことは、<code>rotate</code>は使われるとしたら<code>D = 1</code>か<code>D = -1</code>で少しずつ回転させていくか、もしくは様々な大きさで満遍なく回転させるかのどちらかだと予想できて、現状の実装は様々な大きさの場合にパーフォーマンスがそこまでよくなくて、また<code>|D| = 1</code>の場合もそれならメモリ確保は不要なのだということ。個人的にはどうにかしてin-placeでいいという流れにしたい。少なくともRubyはin-placeだった。</p>","fields":{"date":"2017-07-06"},"frontmatter":{"title":"配列のrotateについて"},"excerpt":"やったこと ジャンクガレッジで辛ラーメンを食べた。やはり辛いものは苦手だ（昨日財布を忘れた腹いせ） 配列のrotateについて 長さNの配列をD個分rotateするには、いくつか方法がある。 一時配列を使う方法   D個分の要素を先頭からコピーして、配列の残りの要素を先頭まで持…"},"prev":{"fields":{"date":"2017-07-07","slug":"/post/2017-07-07-diary/"},"frontmatter":{"title":"疲れていた"}},"next":{"fields":{"date":"2017-07-05","slug":"/post/2017-07-05-diary/"},"frontmatter":{"title":"in-placeなマージソートについて調べていた"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/post/2017-07-06-diary/","prevSlug":"/post/2017-07-07-diary/","nextSlug":"/post/2017-07-05-diary/"}}}