{"componentChunkName":"component---src-templates-post-js","path":"/post/2019-07-17-diary/","webpackCompilationHash":"bce44ba73a3e0a4bf6c8","result":{"data":{"site":{"siteMetadata":{"title":"℘ make now just"}},"markdownRemark":{"html":"<h1>やったこと</h1>\n<h2>mdx-deck</h2>\n<p>バージョン3が出ていた。マジか‥‥。</p>\n<p>なんかGatsbyのプラグインも出ているのでそっちに移行したい‥‥が難しいような気もする。</p>\n<p>とりあえずCodeSurferはよ更新してくれ。</p>\n<h2>シャニマス</h2>\n<p>こがたんTrue。<br>\nDa 500越えてないのにDa 4倍アピ持ってるからゴリ押しできるという‥‥。<br>\nというかWING準決勝も決勝も1位Daだったから余裕だね。</p>\n<p>途中にラジオでカタストロフったりオデ2回くらいミスった気がするけど最後には優勝したからオールオッケーです。</p>\n<p><a href=\"https://twitter.com/make_now_just/status/1151156166375825413\" class=\"embedly-card\">https://twitter.com/make_now_just/status/1151156166375825413</a></p>\n<p>感謝祭は何も分かんない。<br>\nとりあえず育成イベントの限定sSR霧子は取りきったので満足。</p>\n<p><a href=\"https://twitter.com/make_now_just/status/1151503018346422272\" class=\"embedly-card\">https://twitter.com/make_now_just/status/1151503018346422272</a></p>\n<h2>ミリシタ</h2>\n<p>周年カードの覚醒トレーニングが始まったのでやってる。<br>\nメモリアルコミュとドレスアップが面倒。</p>\n<p><a href=\"https://twitter.com/make_now_just/status/1151411062526246912\" class=\"embedly-card\">https://twitter.com/make_now_just/status/1151411062526246912</a></p>\n<p>今はもうちょい進んでる。全員のソロやるのがしんどいんじゃ。</p>\n<p>あとSideMの5周年の生放送観た。SideMもやっていかねばな。</p>\n<h2>Scala近況</h2>\n<p>ここ2週間くらい、ScalaMatsuri 2019のあとから福岡に行く飛行機の中とかで書き始めたやつ。<br>\n<code>nyan</code>という名前の<code>cats</code>もどきのライブラリを作ってる。</p>\n<p><a href=\"https://github.com/MakeNowJust-Labo/scala-labo\" class=\"embedly-card\">https://github.com/MakeNowJust-Labo/scala-labo</a></p>\n<p>今のところ2つのモジュールに分かれていて、</p>\n<ul>\n<li><code>nyan</code></li>\n<li><code>nyan-free</code></li>\n</ul>\n<p>になってる。<code>nyan</code>の方では<code>Functor</code>とか<code>Monad</code>とかの型クラスだったり、<code>ReaderT</code>とかのデータ型を実装したりして、<code>nyan-free</code>で<code>Free</code>と<code>Operational</code>を実装してる。</p>\n<p>現状のステータスとしては、とりあえず<code>Operational</code>は動くようになったけど、多分そんなに効率が良くない感じで、(そっちは飽きてきたので)今は<code>Monad</code>とかlawチェックをScalapropsでやってみてる。<br>\nやっぱProperty Based Testing面白いのんな。</p>\n<p>以下、思ってることなど。</p>\n<h3><code>Selective</code>について</h3>\n<p>なんとなく調べてた。</p>\n<p><code>Applicative</code>は関数部分と引数部分を並列に実行できるという意味で並列的で、<code>Monad</code>はそれが不可能という意味で逐次的という考察が大事だと思う。<br>\nそれで、<code>Selective</code>というのはその意味で<code>Applicative</code>と<code>Monad</code>の中間で、必要が無ければ関数部分の実行をスキップするようなもの、ということになる。</p>\n<p>ただ、この関数部分の実行のスキップというのはlawで規定されているものじゃなくて、むしろlawではそうなることを慎重に避けるようにしてる。<br>\n<code>Monad</code>だと確実に一番効率的な実装ができるけど、それ以外の場合はそうではなくてもいいっぽい。<br>\nまた、具体的にどれくらいの効率になるかっていうのが<code>Over</code>と<code>Under</code>という型を使うと測定できるっぽい。</p>\n<p>疑問点: 任意の<code>Applicative</code>は<code>Selective</code>になる？　なるけどあまり意味が無い？</p>\n<p>論文ちゃんと読まないとさすがに分かんない気がする。</p>\n<h3><code>MonadLogic</code>について</h3>\n<p><code>Selective</code>を調べてたらなんとなく思い出したので、こっちも調べてみてる。</p>\n<p><code>MonadLogic</code>のインスタンスは<code>LogicT</code>とリスト以外わりと壊れがちっぽい。<br>\n<code>msplit</code>という操作が鬼門なのだろう。</p>\n<p>基本的には<code>LogicT</code>というか、<code>ListT</code>みたいな型でしか正しく実装できないんじゃないかな、という気がしてる。<br>\n<code>LogicT</code>が<code>Free MonadLogic</code>みたいな感じなので当然っちゃ当然だけど。</p>\n<p>こっちも一応実装してみたい。</p>\n<h3>IntelliJ IDEAとMetals</h3>\n<p>型が複雑なコードを書いてるせいかIDEAがfalse positiveに陥りがち。<br>\n回避できるときもあるんだけど、何箇所かどうしたらいいのか全く分かんないのがあったので辛くなっていた。</p>\n<p>VS CodeでMetalsというScalaのLanguage Serverを使ったら面白そうだと思ったので試してみてる。<br>\n実際にコンパイラを走らせてるのでfalse positiveは無い。けどファイル保存時にしかチェックが走んないのがむずかゆいところ。<br>\nまあでも補完出るし十分な気もする。</p>\n<p>もう少し使ってみようかな、と思う。</p>","fields":{"date":"2019-07-17"},"frontmatter":{"title":"周年カードのトレーニングがはじまった"},"excerpt":"やったこと mdx-deck バージョン3が出ていた。マジか‥‥。 なんかGatsbyのプラグインも出ているのでそっちに移行したい‥‥が難しいような気もする。 とりあえずCodeSurferはよ更新してくれ。 シャニマス こがたんTrue。 Da 500越えてないのにDa 4倍…"},"prev":{"fields":{"date":"2019-07-18","slug":"/post/2019-07-18-diary/"},"frontmatter":{"title":"17連鎖"}},"next":{"fields":{"date":"2019-07-16","slug":"/post/2019-07-16-diary/"},"frontmatter":{"title":"Scala書いてた"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/post/2019-07-17-diary/","prevSlug":"/post/2019-07-18-diary/","nextSlug":"/post/2019-07-16-diary/"}}}