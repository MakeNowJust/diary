{"componentChunkName":"component---src-templates-post-js","path":"/post/2024-12-04-quine-ac-day4/","result":{"data":{"site":{"siteMetadata":{"title":"℘ make now just"}},"markdownRemark":{"html":"<h1>DAY 4</h1>\n<p><a href=\"https://ballerina.io\">Ballerina</a>というプログラミング言語があります。<br>\nHTTPサービスとかgRPCの公開をファーストクラスにサポートしているのが特徴。<br>\n構文はC#とかJavaっぽい感じ。フローチャートで表示・編集する機能もあるらしいです。<br>\nJVMのバイトコードにコンパイルされて実行されます。<br>\nコンセプトは悪くないのだけど、こんなところでロックインされてもなぁという部分でもあるので、流行りそうなものではないと思った。</p>\n<p>Quineは <code>check from ...</code> によるLINQみたいな構文の繰り返しが面白いと思ったので、それを使ってみています。<br>\n<code>check from</code> の繰り返しの中でエラーが起こらないので警告が出ているけど気にしないことにする。<br>\nあとは、適当にソースコードを見ていたら <code>toBalString</code> というメソッドが定義されていることが分かったので、それを使っています。</p>\n<pre><code class=\"hljs language-csharp\">import ballerina/io;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> function <span class=\"hljs-title\">main</span>() returns error?</span> {\n    <span class=\"hljs-built_in\">string</span>[] xs = [\n        <span class=\"hljs-string\">\"import ballerina/io;\"</span>,\n        <span class=\"hljs-string\">\"\"</span>,\n        <span class=\"hljs-string\">\"public function main() returns error? {\"</span>,\n        <span class=\"hljs-string\">\"    string[] xs = [\"</span>,\n        <span class=\"hljs-string\">\"    ];\"</span>,\n        <span class=\"hljs-string\">\"    string x1 = xs[xs.length() - 1];\"</span>,\n        <span class=\"hljs-string\">\"    string x2 = xs[xs.length() - 2];\"</span>,\n        <span class=\"hljs-string\">\"    check from var [i, x] in xs.enumerate()\"</span>,\n        <span class=\"hljs-string\">\"        where i &#x3C; 4\"</span>,\n        <span class=\"hljs-string\">\"        do {\"</span>,\n        <span class=\"hljs-string\">\"            io:println(x);\"</span>,\n        <span class=\"hljs-string\">\"        };\"</span>,\n        <span class=\"hljs-string\">\"    check from var [i, x] in xs.enumerate()\"</span>,\n        <span class=\"hljs-string\">\"        where i &#x3C; xs.length() - 1\"</span>,\n        <span class=\"hljs-string\">\"        do {\"</span>,\n        <span class=\"hljs-string\">\"            io:println(x1 + x.toBalString() + x2);\"</span>,\n        <span class=\"hljs-string\">\"        };\"</span>,\n        <span class=\"hljs-string\">\"    io:println(x1 + x1.toBalString());\"</span>,\n        <span class=\"hljs-string\">\"    check from var [i, x] in xs.enumerate()\"</span>,\n        <span class=\"hljs-string\">\"        where 4 &#x3C;= i &#x26;&#x26; i &#x3C; xs.length() - 2\"</span>,\n        <span class=\"hljs-string\">\"        do {\"</span>,\n        <span class=\"hljs-string\">\"            io:println(x);\"</span>,\n        <span class=\"hljs-string\">\"        };\"</span>,\n        <span class=\"hljs-string\">\"}\"</span>,\n        <span class=\"hljs-string\">\",\"</span>,\n        <span class=\"hljs-string\">\"        \"</span>\n    ];\n    <span class=\"hljs-built_in\">string</span> x1 = xs[xs.length() - <span class=\"hljs-number\">1</span>];\n    <span class=\"hljs-built_in\">string</span> x2 = xs[xs.length() - <span class=\"hljs-number\">2</span>];\n    check <span class=\"hljs-keyword\">from</span> <span class=\"hljs-keyword\">var</span> [i, x] <span class=\"hljs-keyword\">in</span> xs.enumerate()\n        <span class=\"hljs-keyword\">where</span> i &#x3C; <span class=\"hljs-number\">4</span>\n        <span class=\"hljs-keyword\">do</span> {\n            io:println(x);\n        };\n    check <span class=\"hljs-keyword\">from</span> <span class=\"hljs-keyword\">var</span> [i, x] <span class=\"hljs-keyword\">in</span> xs.enumerate()\n        <span class=\"hljs-keyword\">where</span> i &#x3C; xs.length() - <span class=\"hljs-number\">1</span>\n        <span class=\"hljs-keyword\">do</span> {\n            io:println(x1 + x.toBalString() + x2);\n        };\n    io:println(x1 + x1.toBalString());\n    check <span class=\"hljs-keyword\">from</span> <span class=\"hljs-keyword\">var</span> [i, x] <span class=\"hljs-keyword\">in</span> xs.enumerate()\n        <span class=\"hljs-keyword\">where</span> <span class=\"hljs-number\">4</span> &#x3C;= i &#x26;&#x26; i &#x3C; xs.length() - <span class=\"hljs-number\">2</span>\n        <span class=\"hljs-keyword\">do</span> {\n            io:println(x);\n        };\n}</code></pre>\n<p>実行はこんな感じで。<br>\nHomebrewでインストールできるので適当にやってください。</p>\n<pre><code class=\"hljs language-console\"><span class=\"hljs-meta prompt_\">$ </span><span class=\"bash\">bal run quine.bal | diff quine.bal -</span></code></pre>","fields":{"date":"2024-12-04"},"frontmatter":{"title":"DAY 4 - Ballerina (Quine AC 2024)"},"excerpt":"DAY 4 Ballerinaというプログラミング言語があります。 HTTPサービスとかgRPCの公開をファーストクラスにサポートしているのが特徴。 構文はC#とかJavaっぽい感じ。フローチャートで表示・編集する機能もあるらしいです。 JVMのバイトコードにコンパイルされて実…"},"prev":{"fields":{"date":"2024-12-05","slug":"/post/2024-12-05-quine-ac-day5/"},"frontmatter":{"title":"DAY 5 - ChucK (Quine AC 2024)"}},"next":{"fields":{"date":"2024-12-04","slug":"/post/2024-12-04-diary/"},"frontmatter":{"title":"定理証明支援系と向き合っている"}}},"pageContext":{"slug":"/post/2024-12-04-quine-ac-day4/","prevSlug":"/post/2024-12-05-quine-ac-day5/","nextSlug":"/post/2024-12-04-diary/"}},"staticQueryHashes":["1213933803","2548877431"],"slicesMap":{}}