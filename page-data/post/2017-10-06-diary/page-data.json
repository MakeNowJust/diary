{"componentChunkName":"component---src-templates-post-js","path":"/post/2017-10-06-diary/","webpackCompilationHash":"b2e8e764f3ad2fbbe6d4","result":{"data":{"site":{"siteMetadata":{"title":"℘ make now just"}},"markdownRemark":{"html":"<h1>やったこと</h1>\n<h2>バイトをしていた</h2>\n<p>先読み/後読みを持った正規表現をDFAに変換できた。まさか本当にできると思わなかったがなぜか出来てしまったのでできるのだと思う。</p>\n<p>以下、資料など。</p>\n<ul>\n<li>先読み付き正規表現の有限状態オートマトンへの変換<br>\n<a href=\"https://www.jstage.jst.go.jp/article/jssst/29/1/29_1_1_147/_article/-char/ja/\">https://www.jstage.jst.go.jp/article/jssst/29/1/29_1_1_147/_article/-char/ja/</a><br>\nめっちゃ参考にしたやつ。先読みはBFAで綺麗に実装できるのだけど後読みは‥‥。</li>\n<li>アトミックグループで拡張された正規表現のオートマトンへの変換<br>\n<a href=\"http://ci.nii.ac.jp/naid/110009517217\">http://ci.nii.ac.jp/naid/110009517217</a><br>\nアトミックグループにちゃんとした意味論を与えたことに意義があるのだと思う。</li>\n<li>詳説 正規表現 第3版<br>\n<a href=\"https://www.amazon.co.jp/%E6%AD%A3%E8%A6%8F%E8%A1%A8%E7%8F%BE-%E7%AC%AC3%E7%89%88-Jeffrey-F-Friedl/dp/4873113598\">https://www.amazon.co.jp/正規表現-第3版-Jeffrey-F-Friedl/dp/4873113598</a><br>\n読みたい。</li>\n<li>\n<p>Regular Expression Matching Can Be Simple And Fast<br>\n<a href=\"https://swtch.com/~rsc/regexp/regexp1.html\">https://swtch.com/~rsc/regexp/regexp1.html</a></p>\n<blockquote>\n<p>The generalized assertions are harder to accommodate but in principle could be encoded in the NFA.</p>\n</blockquote>\n<p>とか書いてあるけどソースを教えてくれ〜。</p>\n</li>\n</ul>\n<h1>思うこと</h1>\n<h2>PEGの言語のクラス=TWDPDA without Endmarksの言語のクラス？</h2>\n<p>なのではないかと考えていた。TWDPDAというのはTwo-Way Deterministic Push-Down Automataのことで、これは性質がPEGによく似ている。例えば<code>A^nB^nC^n</code>言語（<code>A</code>と<code>B</code>と<code>C</code>がそれぞれ同じ数含む言語）を受理できたり、文脈自由文法の言語のクラスと比較不能だと言われていたり（未解決）、メモ化することで<code>O(n)</code>で受理するかどうか判定するアルゴリズムが知られていたりする。ただ、TWDPDAは回文を受理できる気がする（文字を全てスタックしながら最後まで読んで、最初まで戻ってから今度はスタックした文字と一致するか確認しながらポップしていて最後まで読めたら受理する、みたいな）ので、TWDPDAからEndmark（末尾を表す特別な記号）を除いたものがPEGなのでは？　という発想。</p>\n<p>これを証明するためには多分、PEG→TWDPDAの変換とTWDPDA→PEGの変換を示せれば良いと思う。PEG→TWDPDAは何となくできそうな気がするのだけど、TWDPDA→PEGはそれなりに難しそうな気がする（FA→正規表現が難しいように）。どっちにせよ変換後の言語が同じものになっていることを示すのが難しそう。PEG parsing machineというPEGに対応する仮想機械があるらしいので、それからTWDPDAに変換したりすれば単純になるかもしれないけど、厳密にPEG=PEG parsing machineなのか調べられていないので何とも言えない。</p>\n<p>これが証明できると何が嬉しいのかというと、多分そんなに嬉しいことは無い。というのもTWDPDA自体がPEG同様謎に満ちた存在で、結局CFGとの関係も良く分かっていないから。ただ、PEGという比較的新しい概念がTWDPDAという半世紀以上前からある概念と結び付けば、これまで見えてこなかったものが見えてくる可能性は十分にあると思う。あってほしい。</p>\n<p>資料。</p>\n<ul>\n<li>Two-way pushdown automata<br>\n<a href=\"http://www.sciencedirect.com/science/article/pii/S0019995867903695\">http://www.sciencedirect.com/science/article/pii/S0019995867903695</a><br>\nTWPDAについての論文。45Pあってしんどい。最初のTWPDAについての定義しか読めていない。むずい‥‥。</li>\n<li>Parsing Expression Grammars: A Recognition-Based Syntactic Foundation<br>\n<a href=\"http://bford.info/pub/lang/peg\">http://bford.info/pub/lang/peg</a><br>\n言わずと知れたPEGの論文。一度通して読んだのだけど内容が記憶から吹っ飛んでいるので読み直している。面白い。</li>\n<li>形式言語とオートマトン<br>\n<a href=\"https://www.amazon.co.jp/%E5%BD%A2%E5%BC%8F%E8%A8%80%E8%AA%9E%E3%81%A8%E3%82%AA%E3%83%BC%E3%83%88%E3%83%9E%E3%83%88%E3%83%B3-Information-Science-Engineering-%E5%AE%88%E5%B1%8B/dp/4781909906\">https://www.amazon.co.jp/形式言語とオートマトン-Information-Science-Engineering-守屋/dp/4781909906</a><br>\nAFAやTWPDAについて触れられていてすごく良い本だと思う。少なくとも2000年ころまでのこの分野の研究成果についてすごくまとまっている気がする。</li>\n<li>計算理論の基礎 [原著第2版] 1.オートマトンと言語<br>\n<a href=\"https://www.amazon.co.jp/%E8%A8%88%E7%AE%97%E7%90%86%E8%AB%96%E3%81%AE%E5%9F%BA%E7%A4%8E-%E5%8E%9F%E8%91%97%E7%AC%AC2%E7%89%88-1-%E3%82%AA%E3%83%BC%E3%83%88%E3%83%9E%E3%83%88%E3%83%B3%E3%81%A8%E8%A8%80%E8%AA%9E-Michael-Sipser/dp/4320122070\">https://www.amazon.co.jp/計算理論の基礎-原著第2版-1-オートマトンと言語-Michael-Sipser/dp/4320122070</a><br>\nAmazonでの評価が異常に高い。読みたい。</li>\n<li>オートマトンと言語理論<br>\n<a href=\"http://www.ci.seikei.ac.jp/yamamoto/lecture/automaton/text.pdf\">http://www.ci.seikei.ac.jp/yamamoto/lecture/automaton/text.pdf</a><br>\nググったら出てきた良さげな教科書。そのうち確認がてら読む。</li>\n</ul>\n<p>気になるのは、どうしてこんな本を眺めてれば気付くような関係について論じている人がいないのか。サーベイ不足感が否めないのでもう少し調査していきたい。</p>","fields":{"date":"2017-10-06"},"frontmatter":{"title":"先読み/後読みを持った正規表現をDFAに変換できた"},"excerpt":"やったこと バイトをしていた 先読み/後読みを持った正規表現をDFAに変換できた。まさか本当にできると思わなかったがなぜか出来てしまったのでできるのだと思う。 以下、資料など。 先読み付き正規表現の有限状態オートマトンへの変換 https://www.jstage.jst.go…"},"prev":{"fields":{"date":"2017-10-07","slug":"/post/2017-10-07-diary/"},"frontmatter":{"title":"いくつかのIssueに対応した"}},"next":{"fields":{"date":"2017-10-04","slug":"/post/2017-10-04-diary/"},"frontmatter":{"title":"バイトをしていた"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/post/2017-10-06-diary/","prevSlug":"/post/2017-10-07-diary/","nextSlug":"/post/2017-10-04-diary/"}}}