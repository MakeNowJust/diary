{"componentChunkName":"component---src-templates-post-js","path":"/post/2020-11-20-diary/","result":{"data":{"site":{"siteMetadata":{"title":"℘ make now just"}},"markdownRemark":{"html":"<h1>やったこと</h1>\n<h2>ReDoS</h2>\n<p>実験のためにひたすら正規表現を集めてる。<br>\n適当にsnyk.ioの脆弱性dbから、ReDoSになってるパッケージを集めてきたら、10000個くらい正規表現が集まった。<br>\nいい感じ。あとは実験をせねば。</p>\n<p>それと1.1.0をリリースした。<br>\n主にfuzzingのときの攻撃文字列の構築の戦略を変更してる。<br>\nこれまでは適当にリピート数を2倍にしていたのを、指数的、4乗的、3乗的、2乗的‥‥みたいな風に仮定してリピート数を決定するようにした。<br>\nこれによってギリギリ脆弱性がありそうでない場合にタイムアウトしなくなったのと、擬似的に計算量が見積もれるようになった。<br>\nこのアイディアは上手い気がする。</p>","fields":{"date":"2020-11-20"},"frontmatter":{"title":"redos 1.1.0をリリースした"},"excerpt":"やったこと ReDoS 実験のためにひたすら正規表現を集めてる。 適当にsnyk.ioの脆弱性dbから、ReDoSになってるパッケージを集めてきたら、10000個くらい正規表現が集まった。 いい感じ。あとは実験をせねば。 それと1.1.0をリリースした。 主にfuzzingのと…"},"prev":{"fields":{"date":"2020-11-21","slug":"/post/2020-11-21-diary/"},"frontmatter":{"title":"セキュキャン"}},"next":{"fields":{"date":"2020-11-19","slug":"/post/2020-11-19-diary/"},"frontmatter":{"title":"redos 1.0.0をリリースした"}}},"pageContext":{"slug":"/post/2020-11-20-diary/","prevSlug":"/post/2020-11-21-diary/","nextSlug":"/post/2020-11-19-diary/"}},"staticQueryHashes":["530032413"]}