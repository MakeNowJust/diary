{"componentChunkName":"component---src-templates-post-js","path":"/post/2018-11-26-diary/","webpackCompilationHash":"3d88166cde09ab352a85","result":{"data":{"site":{"siteMetadata":{"title":"℘ make now just"}},"markdownRemark":{"html":"<h1>やったこと</h1>\n<h2>一蘭に行った</h2>\n<p>ひさしぶりに行った気がする。まあそれなりに美味しい。たまに食べたくなる感じ。</p>\n<h2>Hopcroft-Karpのアルゴリズムを実装した</h2>\n<p>Hopcroft-Karpのアルゴリズムを使って二つのDFAが同値であることの確認するプログラムを書いた。</p>\n<p>Union-Findとか最近書いてなかったけど案外書けるもんだ。</p>\n<p><a href=\"https://gist.github.com/MakeNowJust/f1e414013b074ec9ddb4daf596eb6709\" class=\"embedly-card\">https://gist.github.com/MakeNowJust/f1e414013b074ec9ddb4daf596eb6709</a></p>\n<p>Hopcroft-Karpのアルゴリズムと言えば二部マッチングのためのアルゴリズムなのだけど、こういう使い方もできるのだなぁと思うのだった。</p>\n<p>ちなみにこのコードは次の論文を参考にした。</p>\n<blockquote>\n<p>Testing the Equivalence of Regular Languages<br>\nAlmeida M., Moreira N., Reis R. (2009)<br>\n<a href=\"https://arxiv.org/abs/0907.5058\">https://arxiv.org/abs/0907.5058</a></p>\n</blockquote>\n<p>まあDFAで同値をチェックするのだと正規表現から式の情報が失われてしまうので、あまり今後の目的には似わないし、多分使うことは無いと思う。式変形で同値をチェックするアルゴリズムを学ばねば‥‥。</p>","fields":{"date":"2018-11-26"},"frontmatter":{"title":"Hopcroft-Karpのアルゴリズムを実装した"},"excerpt":"やったこと 一蘭に行った ひさしぶりに行った気がする。まあそれなりに美味しい。たまに食べたくなる感じ。 Hopcroft-Karpのアルゴリズムを実装した Hopcroft-Karpのアルゴリズムを使って二つのDFAが同値であることの確認するプログラムを書いた。 Union-F…"},"prev":{"fields":{"date":"2018-11-27","slug":"/post/2018-11-27-diary/"},"frontmatter":{"title":"md.htmlの最適化をやった"}},"next":{"fields":{"date":"2018-11-25","slug":"/post/2018-11-25-diary/"},"frontmatter":{"title":"エンジニアライブ東京に行った"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/post/2018-11-26-diary/","prevSlug":"/post/2018-11-27-diary/","nextSlug":"/post/2018-11-25-diary/"}}}