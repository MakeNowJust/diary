{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/post/2020-03-28-diary/",
    "result": {"data":{"site":{"siteMetadata":{"title":"℘ make now just"}},"markdownRemark":{"html":"<h1>やったこと</h1>\n<h2>ReRE.js</h2>\n<p>後読みを含む線形マッチについて検討していたけどやはり厳しい。<br>\n完全に行き詰まっていた。</p>\n<p>とりあえず、この論文を読んでいた。</p>\n<ul>\n<li><a href=\"https://arxiv.org/abs/1907.08837\" class=\"embedly-card\">Tagged Deterministic Finite Automata with Lookahead</a></li>\n</ul>\n<p>他に貪欲マッチのサブマッチングについて考察しているものはこの辺がある。</p>\n<ul>\n<li><a href=\"https://ci.nii.ac.jp/naid/170000131135/\" class=\"embedly-card\">決定性有限オートマトンによる正規表現の貪欲な部分照合と部分式による捕獲</a></li>\n</ul>\n<p>貪欲マッチを上手く実装するには、基本的にはパーズツリーを求めて計算する必要がある。<br>\nで、パーズツリーに貪欲マッチの性質を反映した順序を入れて、その最小の要素を解とする。<br>\n‥‥それは分かるんだがな。うーん。</p>\n<p>埒が明かないのでREQueryの実装に戻る。<br>\n<code>Element</code>の実装に戻ろう。</p>","fields":{"date":"2020-03-28"},"frontmatter":{"title":"後読みなんも分からん‥‥"},"excerpt":"やったこと ReRE.js 後読みを含む線形マッチについて検討していたけどやはり厳しい。 完全に行き詰まっていた。 とりあえず、この論文を読んでいた。 Tagged Deterministic Finite Automata with Lookahead 他に貪欲マッチのサブマ…"},"prev":{"fields":{"date":"2020-03-29","slug":"/post/2020-03-29-diary/"},"frontmatter":{"title":"ReRE.jsにDOMみたいなAPIを実装した"}},"next":{"fields":{"date":"2020-03-27","slug":"/post/2020-03-27-diary/"},"frontmatter":{"title":"灯織の信頼度Lv Maxにした"}}},"pageContext":{"slug":"/post/2020-03-28-diary/","prevSlug":"/post/2020-03-29-diary/","nextSlug":"/post/2020-03-27-diary/"}},
    "staticQueryHashes": ["530032413"]}