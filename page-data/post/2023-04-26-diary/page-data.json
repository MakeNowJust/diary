{"componentChunkName":"component---src-templates-post-js","path":"/post/2023-04-26-diary/","result":{"data":{"site":{"siteMetadata":{"title":"℘ make now just"}},"markdownRemark":{"html":"<h1>やったこと</h1>\n<h2>BDD</h2>\n<p>BDDというかもはや文字クラスの話題のような気がする。</p>\n<p>現代的な正規表現実装で <code>i</code> フラグで1文字が複数文字列にマッチする (例: <code>ß</code> が <code>SS</code> にマッチする) 可能性があるのはデフォルトだとRubyくらいで、Javaも一応オプションでできる、みたいな感じなのではないかということに気付いた。<br>\nこれをエスツェット問題と呼ぼう。<br>\nちなみに <code>/ss/i =~ \"ß\"</code> もマッチする。どうなってるんだ‥‥。ICU4Jの正規表現実装でも同じようなことをやってくれる。<br>\nでも <code>/s(s)/i =~ \"ß\"</code> はマッチしないっぽい。なるほど。<br>\nぶっちゃけこれ系の対応は現実的ではないので諦めてもいい気がする。難しすぎるわりにリターンが少ない。</p>\n<p>あと.NETの正規表現実装も調査していた。Brzozowski微分を使ったやつ。<br>\nどうも <code>i</code> フラグの解釈はパースのときにやっているっぽい。<br>\nそれが賢いのか。</p>","fields":{"date":"2023-04-26"},"frontmatter":{"title":"色んな言語の文字クラスについて考えていた"},"excerpt":"やったこと BDD BDDというかもはや文字クラスの話題のような気がする。 現代的な正規表現実装で i フラグで1文字が複数文字列にマッチする (例: ß が SS にマッチする) 可能性があるのはデフォルトだとRubyくらいで、Javaも一応オプションでできる、みたいな感じな…"},"prev":{"fields":{"date":"2023-04-27","slug":"/post/2023-04-27-diary/"},"frontmatter":{"title":"文字クラスだんだん分かってきた"}},"next":{"fields":{"date":"2023-04-25","slug":"/post/2023-04-25-diary/"},"frontmatter":{"title":"文字クラスの実装をしていた"}}},"pageContext":{"slug":"/post/2023-04-26-diary/","prevSlug":"/post/2023-04-27-diary/","nextSlug":"/post/2023-04-25-diary/"}},"staticQueryHashes":["1213933803","2548877431"],"slicesMap":{}}