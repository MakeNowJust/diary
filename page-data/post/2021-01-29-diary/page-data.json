{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/post/2021-01-29-diary/",
    "result": {"data":{"site":{"siteMetadata":{"title":"℘ make now just"}},"markdownRemark":{"html":"<h1>やったこと</h1>\n<h2>minicheck</h2>\n<p>何というかダメだーという気持ちになっている。<br>\nそもそも今のやり方だと <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>A</mi><mo>→</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">(A \\to B) \\to C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span></span> 型の関数として <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>×</mo><msup><mi>C</mi><mi>B</mi></msup></mrow><annotation encoding=\"application/x-tex\">A \\times C^B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8413em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span></span></span></span></span></span></span></span></span> 種類の値しか生成されないから、どうしても生成できない関数があるのが問題だということにもっと早く気付きたかった。<br>\n<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><msup><mi>B</mi><mi>A</mi></msup></msup></mrow><annotation encoding=\"application/x-tex\">C^{B^A}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0064em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0064em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9191em;\"><span style=\"top:-2.931em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> 種類あるのは明らかなんだからどうにかしなきゃいけないと思われる‥‥がどうしようもない気もする。</p>\n<p>例えば、<code>(Boolean => Boolean) => Boolean</code> の関数に対して、現在の方法だと次の6種類しか生成されないけど、この型の関数は全部で16通りあるはず。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\"><code>id</code></th>\n<th align=\"center\"><code>not</code></th>\n<th align=\"center\"><code>const(true)</code></th>\n<th align=\"center\"><code>const(false)</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>(true, id)</code></td>\n<td align=\"center\"><code>true</code></td>\n<td align=\"center\"><code>false</code></td>\n<td align=\"center\"><code>true</code></td>\n<td align=\"center\"><code>false</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>(false, id)</code></td>\n<td align=\"center\"><code>false</code></td>\n<td align=\"center\"><code>true</code></td>\n<td align=\"center\"><code>true</code></td>\n<td align=\"center\"><code>false</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>(true, not)</code></td>\n<td align=\"center\"><code>false</code></td>\n<td align=\"center\"><code>true</code></td>\n<td align=\"center\"><code>false</code></td>\n<td align=\"center\"><code>true</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>(false, not)</code></td>\n<td align=\"center\"><code>true</code></td>\n<td align=\"center\"><code>false</code></td>\n<td align=\"center\"><code>false</code></td>\n<td align=\"center\"><code>true</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>(true, const(true))</code></td>\n<td align=\"center\"><code>true</code></td>\n<td align=\"center\"><code>true</code></td>\n<td align=\"center\"><code>true</code></td>\n<td align=\"center\"><code>true</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>(false, const(true))</code></td>\n<td align=\"center\"><code>true</code></td>\n<td align=\"center\"><code>true</code></td>\n<td align=\"center\"><code>true</code></td>\n<td align=\"center\"><code>true</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>(true, const(false))</code></td>\n<td align=\"center\"><code>false</code></td>\n<td align=\"center\"><code>false</code></td>\n<td align=\"center\"><code>false</code></td>\n<td align=\"center\"><code>false</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>(false, const(false))</code></td>\n<td align=\"center\"><code>false</code></td>\n<td align=\"center\"><code>false</code></td>\n<td align=\"center\"><code>false</code></td>\n<td align=\"center\"><code>false</code></td>\n</tr>\n</tbody>\n</table>\n<p>よって、<code>f(id) &#x26;&#x26; f(not) &#x26;&#x26; f(const(true)) &#x26;&#x26; !f(const(false))</code> が <code>true</code> になるような関数とかが生成できなかったりする。</p>\n<p>知能が足りない。</p>\n<p>一応、<code>:=></code> の <code>table</code> メソッドを使って、いくつかの値を乱数生成器に反映させるようにすればこういうのにもある程度は対処できそうだけど、本質的な解決にはなっていない気がする。<br>\nというかそれでどうやって縮小するんだ？　できるか？</p>\n<p>とはいえこの問題を解決できたらかっこいい。<br>\nがんばっていきたい。</p>","fields":{"date":"2021-01-29"},"frontmatter":{"title":"minicheckダメじゃん"},"excerpt":"やったこと minicheck 何というかダメだーという気持ちになっている。 そもそも今のやり方だと  型の関数として  種類の値しか生成されないから、どうしても生成できない関数があるのが問題だということにもっと早く気付きたかった。  種類あるのは明らかなんだからどうにかしなき…"},"prev":{"fields":{"date":"2021-01-30","slug":"/post/2021-01-30-diary/"},"frontmatter":{"title":"Weekly Crystal-JPをやった"}},"next":{"fields":{"date":"2021-01-28","slug":"/post/2021-01-28-diary/"},"frontmatter":{"title":"雪だった"}}},"pageContext":{"slug":"/post/2021-01-29-diary/","prevSlug":"/post/2021-01-30-diary/","nextSlug":"/post/2021-01-28-diary/"}},
    "staticQueryHashes": ["530032413"]}