{"componentChunkName":"component---src-templates-post-js","path":"/post/2021-09-03-diary/","result":{"data":{"site":{"siteMetadata":{"title":"℘ make now just"}},"markdownRemark":{"html":"<h1>やったこと</h1>\n<h2>Crystal</h2>\n<p>ここ最近 Crystal へのコントリビュートをやっていた。</p>\n<p><a href=\"https://github.com/crystal-lang/crystal/pull/11153\" class=\"embedly-card\">https://github.com/crystal-lang/crystal/pull/11153</a></p>\n<p><a href=\"https://github.com/crystal-lang/crystal/pull/11154\" class=\"embedly-card\">https://github.com/crystal-lang/crystal/pull/11154</a></p>\n<p><a href=\"https://github.com/crystal-lang/crystal/pull/11162\" class=\"embedly-card\">https://github.com/crystal-lang/crystal/pull/11162</a></p>\n<p>最後のは <code>Class#===</code> がメタクラスに対して上手く動いていないというもので、ちょっと面倒だった。<br>\nこれは、<code>Class#===</code> が <code>other.is_a?(self)</code> のように実装されているのだけど、メタクラスがレシーバーのとき <code>self</code> が <code>Object</code> として扱われてしまう、というのが原因。<br>\n<code>Class</code> のインスタンス型が <code>Object</code> なのが悪いといえば悪いのだけど、<code>Class</code> のインスタンス型を <code>Class</code> にする方向で修正しようと思うと、インスタンス型が再帰的になることを想定してないから無限に stack overflow したりループしたりしてしんどかったし、そもそも <code>Class</code> のインスタンス型が本当に <code>Class</code> かというのも明らかではないので、マクロで強引に解決する形にした。<br>\nこれが無難だと思う。</p>\n<p>あと <code>Class#cast</code> にも同種の問題がある気がするけどどうしよう。<br>\nというかどうなるのがいいのか。<br>\nこれもやっかいな問題ではある。</p>\n<h2>インターン</h2>\n<p>了。おつかれさまでした。</p>","fields":{"date":"2021-09-03"},"frontmatter":{"title":"インターンおわり"},"excerpt":"やったこと Crystal ここ最近 Crystal へのコントリビュートをやっていた。 https://github.com/crystal-lang/crystal/pull/11153 https://github.com/crystal-lang/crystal/pul…"},"prev":{"fields":{"date":"2021-09-04","slug":"/post/2021-09-04-diary/"},"frontmatter":{"title":"eslint-plugin-redos をどうにかしていた"}},"next":{"fields":{"date":"2021-09-02","slug":"/post/2021-09-02-diary/"},"frontmatter":{"title":"キャルちゃんの誕生日"}}},"pageContext":{"slug":"/post/2021-09-03-diary/","prevSlug":"/post/2021-09-04-diary/","nextSlug":"/post/2021-09-02-diary/"}},"staticQueryHashes":["530032413"]}