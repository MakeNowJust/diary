{"componentChunkName":"component---src-templates-post-js","path":"/post/2020-08-12-diary/","result":{"data":{"site":{"siteMetadata":{"title":"℘ make now just"}},"markdownRemark":{"html":"<h1>やったこと</h1>\n<h2>Scala</h2>\n<p>miniparseの公開が面倒になってきたので、今度はstackparseというのを作ってる。<br>\nパーサーをデータ構造にして、Freeモナドみたいな感じでスタックを使わずにパースできる、みたいな。<br>\n何はともあれimmutableなのが特徴かもしれない。<br>\nminiparseほどでなくともparser-combinatorsよりは速いといいなぁ、と思っている。</p>\n<p>一応動くものはできたのだけど、型が妙に複雑になっていて本当にこれでいいのか、と悩む。<br>\ncutとかの概念に関しては理解が深まった気もする。</p>\n<p>あと、作りながら、これSelective関手にして上手く解析して最適化したらいい感じにやれるのでは、と思って少し調べてみたら、こんなのを見つけた。</p>\n<p><a href=\"https://icfp20.sigplan.org/details/icfp-2020-papers/20/Staged-Selective-Parser-Combinators\" class=\"embedly-card\">https://icfp20.sigplan.org/details/icfp-2020-papers/20/Staged-Selective-Parser-Combinators</a></p>\n<p>Selective関手を使ったパーサーコンビネータライブラリで、内部ではVMでパースを行うのだけど、VMへのinstructionへのコンパイルをSelectiveの範囲なら静的に行えるから高速、みたいな感じだと思う。</p>\n<p>実装はこのParsleyというやつっぽい。</p>\n<p><a href=\"https://github.com/J-mie6/ParsleyHaskell\" class=\"embedly-card\">https://github.com/J-mie6/ParsleyHaskell</a></p>\n<p>Scala版もあるけど、こっちは作りかけな気がする。</p>\n<p><a href=\"https://github.com/J-mie6/Parsley\" class=\"embedly-card\">https://github.com/J-mie6/Parsley</a></p>\n<p>Haskellだとがんばると型安全なままやれるっぽい。<br>\nScalaでも不可能じゃないけど効率がどうかなぁ‥‥。</p>\n<p>Selectiveをパーサーに使うというアイディアはすごく興味深いので、もう少し調べてみたい。<br>\nというか今年のICFPオンラインだし、発表聞けたりしないかな。</p>","fields":{"date":"2020-08-12"},"frontmatter":{"title":"stackparseつくってた"},"excerpt":"やったこと Scala miniparseの公開が面倒になってきたので、今度はstackparseというのを作ってる。 パーサーをデータ構造にして、Freeモナドみたいな感じでスタックを使わずにパースできる、みたいな。 何はともあれimmutableなのが特徴かもしれない。 m…"},"prev":null,"next":{"fields":{"date":"2020-08-11","slug":"/post/2020-08-11-diary/"},"frontmatter":{"title":"BORN ON DREAM結果発表"}}},"pageContext":{"slug":"/post/2020-08-12-diary/","prevSlug":null,"nextSlug":"/post/2020-08-11-diary/"}},"staticQueryHashes":["530032413"]}