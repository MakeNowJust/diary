{"componentChunkName":"component---src-templates-post-js","path":"/post/2018-07-28-diary/","webpackCompilationHash":"6a791df9215697323d68","result":{"data":{"site":{"siteMetadata":{"title":"℘ make now just"}},"markdownRemark":{"html":"<h1>やったこと</h1>\n<h2>これまで</h2>\n<p>この一週間くらい日記を書いていなかった。<br>\nその間にBLEACHの実写映画を観たりした。普通に面白かったし漫画を一度読んでみたい。しかし巻数多い‥‥。</p>\n<p>やってたことは大体記録してあるので書こうと思えば書けるのだけど面倒なのでパス。<br>\nとりあえず、これからのことを考えると胃が痛くなる感じ。coo。</p>\n<h2>eenextを公開した</h2>\n<p><a href=\"https://github.com/MakeNowJust/eenext\" class=\"embedly-card\">https://github.com/MakeNowJust/eenext</a></p>\n<p>TypeScriptで<code>EventEmitter</code>を実装したのでeenextという名前でNPMにpublishした。ひさしぶりにNPMに公開した気がする。NPMに公開するベストプラクティスは未だによく分からない。</p>\n<p>このeenextの面白いところは二つある。</p>\n<p>一つはしっかりと型が付くところ。</p>\n<p><code>EventEmitter</code>の型引数に<code>Events</code>を渡しているのがポイント。</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">import</span> EventEmitter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'eenext'</span>;\n\n<span class=\"hljs-keyword\">interface</span> Events {\n  event: <span class=\"hljs-built_in\">string</span>;\n  end: <span class=\"hljs-built_in\">void</span>;\n}\n\n<span class=\"hljs-keyword\">const</span> ee = <span class=\"hljs-keyword\">new</span> EventEmitter&#x3C;Events>({end: <span class=\"hljs-string\">'end'</span>});</code></pre>\n<p>こうすると<code>on</code>とか<code>once</code>とか<code>emit</code>するときに型が付くようになる。</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-comment\">// こういうのはコンパイルが通る</span>\nee.on(<span class=\"hljs-string\">'event'</span>, <span class=\"hljs-function\"><span class=\"hljs-params\">value</span> =></span> {\n  <span class=\"hljs-built_in\">console</span>.log(value.toUpperCase());\n});\n\nee.emit(<span class=\"hljs-string\">'event'</span>, <span class=\"hljs-string\">'foo'</span>);\n\n<span class=\"hljs-comment\">// こういうのはダメ</span>\nee.on(<span class=\"hljs-string\">'no event'</span>, <span class=\"hljs-function\"><span class=\"hljs-params\">value</span> =></span> {\n  <span class=\"hljs-built_in\">console</span>.log(value);\n});\n\nee.emit(<span class=\"hljs-string\">'no event'</span>);</code></pre>\n<p>あと、型が<code>void</code>なイベント名の場合は<code>emit</code>のときに値の部分を省略できるのもポイント。</p>\n<pre><code class=\"hljs language-typescript\">ee.emit(<span class=\"hljs-string\">'end'</span>); <span class=\"hljs-comment\">// これはOK</span>\nee.emit(<span class=\"hljs-string\">'event'</span>); <span class=\"hljs-comment\">// こっちはダメ</span></code></pre>\n<p>もう一つは、<code>on</code>とか<code>once</code>でイベントリスナを渡すのを省略した場合に<code>AsyncIterator</code>とか<code>Promise</code>を返すところ。</p>\n<p><code>AsyncIterator</code>は<code>for await ~ of</code>でループできるやつ。最近のNode.jsは対応してるので何か動く。</p>\n<pre><code class=\"hljs language-typescript\">(<span class=\"hljs-keyword\">async</span> () => {\n  <span class=\"hljs-comment\">// 'emit'が発火するのを待つ</span>\n  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-keyword\">await</span> ee.once(<span class=\"hljs-string\">'event'</span>);\n\n  <span class=\"hljs-keyword\">for</span> awit (<span class=\"hljs-keyword\">const</span> value of ee.on(<span class=\"hljs-string\">'event'</span>)) {\n    <span class=\"hljs-built_in\">console</span>.log(value);\n  }\n})();\n\nee.emit(<span class=\"hljs-string\">'event'</span>, <span class=\"hljs-string\">'1st'</span>);\nee.emit(<span class=\"hljs-string\">'event'</span>, <span class=\"hljs-string\">'2nd'</span>);\nee.emit(<span class=\"hljs-string\">'event'</span>, <span class=\"hljs-string\">'3rd'</span>);\nee.emit(<span class=\"hljs-string\">'end'</span>);</code></pre>\n<p>その他地味に面白いところとして、<code>emit</code>が非同期に実行される。こうするとイベントリスナ中でイベントを発火させてもビジーループにならないのでちょっと便利な気がする。<br>\nどうしても同期したい場合は<code>emit</code>が<code>Promise</code>を返すのでそれを<code>await</code>すればいいはず。</p>\n<h2>ラブライブを観てる</h2>\n<p>シンデレラガールズを観たので勢いで見始めてしまった。</p>\n<p>今度こそ最後まで観たい。</p>","fields":{"date":"2018-07-28"},"frontmatter":{"title":"eenextを公開した"},"excerpt":"やったこと これまで この一週間くらい日記を書いていなかった。 その間にBLEACHの実写映画を観たりした。普通に面白かったし漫画を一度読んでみたい。しかし巻数多い‥‥。 やってたことは大体記録してあるので書こうと思えば書けるのだけど面倒なのでパス。 とりあえず、これからのこと…"},"prev":{"fields":{"date":"2018-07-29","slug":"/post/2018-07-29-diary/"},"frontmatter":{"title":"神田明神に行った"}},"next":{"fields":{"date":"2018-07-20","slug":"/post/2018-07-20-diary/"},"frontmatter":{"title":"未来のミライを観た"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/post/2018-07-28-diary/","prevSlug":"/post/2018-07-29-diary/","nextSlug":"/post/2018-07-20-diary/"}}}