{"componentChunkName":"component---src-templates-post-js","path":"/post/2024-12-03-quine-ac-day3/","result":{"data":{"site":{"siteMetadata":{"title":"℘ make now just"}},"markdownRemark":{"html":"<h1>DAY 3</h1>\n<p><a href=\"https://arturo-lang.io\">Arturo</a> というプログラミング言語があります。<br>\nLogoやRebolの影響を受けたというプログライング言語で、<code>:</code> で代入や <code>[ ... ]</code> のブロック構文などが特徴な気がします。<br>\nRebolっぽいのだけど、Rebolほど原理主義じゃない感じ。</p>\n<p>Homebrewでインストールできるので動かすのは簡単。</p>\n<p>Quineは <code>do</code> で Eval相当のことができるのでそれを使いました。<br>\nただ、ブロックを渡すと再帰的に参照してるせいかエラーになるので文字列にしています。<br>\n<code>{: ... :}</code> というのが文字列リテラルの一種になっています。<br>\nあと、<code>render</code> という面白い機能があるのだけど、こっちも展開が再帰的に行なわれるせいで止まらなくなるので諦めました。</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-attr\">s</span>: {:print [<span class=\"hljs-string\">\"s:\"</span> <span class=\"hljs-string\">\"{:\"</span>++s++<span class=\"hljs-string\">\":\"</span>++<span class=\"hljs-string\">\"}\"</span> <span class=\"hljs-string\">\"do s\"</span>]:} <span class=\"hljs-keyword\">do</span> s</code></pre>","fields":{"date":"2024-12-03"},"frontmatter":{"title":"DAY 3 - Arturo (Quine AC 2024)"},"excerpt":"DAY 3 Arturo というプログラミング言語があります。 LogoやRebolの影響を受けたというプログライング言語で、: で代入や [ ... ] のブロック構文などが特徴な気がします。 Rebolっぽいのだけど、Rebolほど原理主義じゃない感じ。 Homebrewで…"},"prev":null,"next":{"fields":{"date":"2024-12-03","slug":"/post/2024-12-03-diary/"},"frontmatter":{"title":"異常に疲れてる"}}},"pageContext":{"slug":"/post/2024-12-03-quine-ac-day3/","prevSlug":null,"nextSlug":"/post/2024-12-03-diary/"}},"staticQueryHashes":["1213933803","2548877431"],"slicesMap":{}}