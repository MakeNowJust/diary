{"componentChunkName":"component---src-templates-post-js","path":"/post/2017-12-23-diary/","webpackCompilationHash":"cd439318cf595a19c267","result":{"data":{"site":{"siteMetadata":{"title":"℘ make now just"}},"markdownRemark":{"html":"<h1>やったこと</h1>\n<h2>2DFAの勉強をした</h2>\n<p>双方向決定的有限状態オートマトン(2DFA)がどうしてDFAに変換できるのかよく分からなかったので勉強した。</p>\n<p>末尾が文字<code>a</code>である文字列<code>wa</code>があるときに、<code>a</code>の位置に状態<code>q</code>で入ってきて、<code>w</code>の文字列を戻ったりしたあと<code>a</code>の次の位置へ<code>p</code>で出て行くような状況を<code>T[wa](q) = p</code>と書くことにする。（下図参照）</p>\n<pre><code>| ... w ... | a |\n /-&#x3C;-------&#x3C;-[ ]&#x3C;-q-\n \\->------->-[ ]-p->\n</code></pre>\n<p>状態の数は有限だから、<code>T[wa](q) = p</code>の組み合わせの数は状態の数を<code>n</code>としてたかだか<code>n^n</code>の有限個になる。これは明かに文字列の数よりも小さいので、異なる文字列<code>x</code>と<code>y</code>で<code>T[x] = T[y]</code>となるような<code>x, y</code>の組が存在する（鳩の巣原理）。このような<code>x, y</code>に同じ末尾文字列<code>z</code>をつけた文字列<code>xz, yz</code>は<code>xz</code>が受理されるときに限り<code>yz</code>も受理されるだろう。逆もまた然り。よって<code>T[x] = T[y]</code>であることを<code>x ~ y</code>とすると<code>~</code>は同値関係であり、Myhill-Nerodeの定理より2DFAは正規であると言える。そして、<code>T[x]</code>を状態としてDFAを構築することができる、というわけ。</p>\n<p>しかしこれを実装するのはとてもしんどい。あと、Verdiという人が考えた別のDFA構築の方法もあって、そっちも面白い。が、やはり実装が面倒。</p>\n<h2>実装した</h2>\n<p>なぜかHaskell。</p>\n<p><a href=\"https://github.com/MakeNowJust-Labo/two-way-dfa\" class=\"embedly-card\">https://github.com/MakeNowJust-Labo/two-way-dfa</a></p>\n<p>DFAへの変換を実装していないのでダメと言えばダメ。</p>","fields":{"date":"2017-12-23"},"frontmatter":{"title":"2DFAの実装をした"},"excerpt":"やったこと 2DFAの勉強をした 双方向決定的有限状態オートマトン(2DFA)がどうしてDFAに変換できるのかよく分からなかったので勉強した。 末尾が文字aである文字列waがあるときに、aの位置に状態qで入ってきて、wの文字列を戻ったりしたあとaの次の位置へpで出て行くような状…"},"prev":{"fields":{"date":"2017-12-24","slug":"/post/2017-12-24-diary/"},"frontmatter":{"title":"鍋をした"}},"next":{"fields":{"date":"2017-12-22","slug":"/post/2017-12-22-diary/"},"frontmatter":{"title":"立川でガルパンをみた"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/post/2017-12-23-diary/","prevSlug":"/post/2017-12-24-diary/","nextSlug":"/post/2017-12-22-diary/"}}}