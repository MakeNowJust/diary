{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/post/2020-03-29-diary/",
    "result": {"data":{"site":{"siteMetadata":{"title":"℘ make now just"}},"markdownRemark":{"html":"<h1>やったこと</h1>\n<h2>舟を編む</h2>\n<p>アニメを観た。<br>\n山場というほどの山場があるわけではないのだけど、全体を通して面白いなぁ、となる不思議な作品。<br>\n辞書を作る、という仕事に対する描き方が誠実なんだろうな。</p>\n<p>原作を読んだのは結構昔だけど、一度読み返したいものだ。</p>\n<h2>ミリシタ</h2>\n<p>無料10連ありがとう‥‥。</p>\n<p><a href=\"https://twitter.com/make_now_just/status/1244162316762935296\" class=\"embedly-card\">https://twitter.com/make_now_just/status/1244162316762935296</a></p>\n<p>しかし、はるかれんとは。<br>\n面白いところを引っ張ってくるな。</p>\n<p>そしてshiny smile。<br>\nミリシタに感謝しかない。</p>\n<h2>ReRE,js</h2>\n<p>DOMみたいなAPIを実装した。<br>\n微妙に詰め切れていないのでpushしていないけど、親・兄弟・子ノードの取得と、ノードの追加・削除ができるようになっている。<br>\n基本的には<code>recurse</code>の内部とかで使うものだけど、単体でも使えるつもり。</p>\n<p>ノードの追加・削除ができる条件が厳しすぎるような気もするけど、整合性を保とうと思うと難しいんだよな‥‥。<br>\n(<code>children</code>プロパティを持っているノードに対してしか削除できない)<br>\nかといって気の利いた仕様を考え出すと永遠に完成しなくなる気がするので、とりあえずこれでいきたい。</p>\n<p>あとはAPIの名前とディレクトリ階層を整理するなどして、テストを書いたらマージできる。<br>\n‥‥全然できてないじゃん。</p>","fields":{"date":"2020-03-29"},"frontmatter":{"title":"ReRE.jsにDOMみたいなAPIを実装した"},"excerpt":"やったこと 舟を編む アニメを観た。 山場というほどの山場があるわけではないのだけど、全体を通して面白いなぁ、となる不思議な作品。 辞書を作る、という仕事に対する描き方が誠実なんだろうな。 原作を読んだのは結構昔だけど、一度読み返したいものだ。 ミリシタ 無料10連ありがとう‥…"},"prev":{"fields":{"date":"2020-03-30","slug":"/post/2020-03-30-diary/"},"frontmatter":{"title":"引き籠っていた"}},"next":{"fields":{"date":"2020-03-28","slug":"/post/2020-03-28-diary/"},"frontmatter":{"title":"後読みなんも分からん‥‥"}}},"pageContext":{"slug":"/post/2020-03-29-diary/","prevSlug":"/post/2020-03-30-diary/","nextSlug":"/post/2020-03-28-diary/"}},
    "staticQueryHashes": ["530032413"]}