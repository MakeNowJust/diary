{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/post/2021-05-13-diary/",
    "result": {"data":{"site":{"siteMetadata":{"title":"℘ make now just"}},"markdownRemark":{"html":"<h1>やったこと</h1>\n<h2>lite</h2>\n<p><code>lite-grapheme</code> を公開した。<br>\n文字列を書記素クラスタに分解するライブラリ。</p>\n<p><a href=\"https://github.com/MakeNowJust-Labo/lite/tree/main/modules/lite-grapheme\" class=\"embedly-card\">https://github.com/MakeNowJust-Labo/lite/tree/main/modules/lite-grapheme</a></p>\n<p>基本の使い方は、<code>Grapheme.iterate(s)</code> で <code>s</code> を書記素クラスタに分解するイテレータを返すので、それを使うことになる。<br>\n他にも <code>Grapheme.findNextBoundary(s, index)</code> で <code>index</code> から次の書記素クラスタの境界位置を返したり、<code>findPreviousBoundary(s, index)</code> で前の書記素クラスタの境界位置を返したりできる。</p>\n<p>内部的な実装は <a href=\"https://unicode.org/reports/tr29/\">UAX29</a> に書いてあった正規表現を手で DFA にして処理している。<br>\nただ、 <code>findNextBoundary</code> とかは書記素クラスタの途中から始まる可能性があるので、その場合に対応すえるためにいくつかの例外処理をしている。</p>\n<p>なんか生成したコードで無限にコンパイル時間がかかるので困ったのだけど、Scala 3 では総称型の可変長引数の推論に時間がかかるっぽいので型引数を指定するようにしたら改善した。<br>\n罠すぎる。</p>\n<p>そして、何やら Scala 3 がリリースされてみたいなので、Scala 3 でのビルドを試したりしていた。</p>\n<p><a href=\"https://twitter.com/make_now_just/status/1392867255147397120\" class=\"embedly-card\">https://twitter.com/make_now_just/status/1392867255147397120</a></p>","fields":{"date":"2021-05-13"},"frontmatter":{"title":"lite-grapheme を公開した"},"excerpt":"やったこと lite lite-grapheme を公開した。 文字列を書記素クラスタに分解するライブラリ。 https://github.com/MakeNowJust-Labo/lite/tree/main/modules/lite-grapheme 基本の使い方は、Gra…"},"prev":{"fields":{"date":"2021-05-14","slug":"/post/2021-05-14-diary/"},"frontmatter":{"title":"lite 0.3.0 をリリースした"}},"next":{"fields":{"date":"2021-05-12","slug":"/post/2021-05-12-diary/"},"frontmatter":{"title":"力尽きてる"}}},"pageContext":{"slug":"/post/2021-05-13-diary/","prevSlug":"/post/2021-05-14-diary/","nextSlug":"/post/2021-05-12-diary/"}},
    "staticQueryHashes": ["530032413"]}