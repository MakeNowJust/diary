{"version":3,"sources":["webpack:///./src/components/paginator.js","webpack:///./src/templates/list.js"],"names":["Paginator","_ref","prev","next","react_default","a","createElement","className","styles","paginator","gatsby_browser_entry","to","prevLink","nextLink","defaultProps","__webpack_require__","d","__webpack_exports__","query","ListTemplate","data","pageContext","posts","allMarkdownRemark","edges","map","_ref2","node","key","id","post","fields","slug","date","frontmatter","title","excerpt","current","currentListPage","listPages","_data$site$siteMetada","site","siteMetadata","siteTitle","description","layout","Helmet","name","content","rel","href"],"mappings":"yJAMMA,EAAY,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,KAAMC,EAARF,EAAQE,KAAR,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOC,WACpBP,GACCE,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAIT,EAAMK,UAAWC,IAAOI,UAAlC,QAIDV,GAAQC,GAAQ,IAChBA,GACCC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAIR,EAAMI,UAAWC,IAAOK,UAAlC,UAcNb,EAAUc,aAAe,CACvBZ,KAAM,KACNC,KAAM,MAGOH,mCClCfe,EAAAC,EAAAC,EAAA,0BAAAC,IA2DeC,UAjDM,SAAAlB,GAAyB,IAAvBmB,EAAuBnB,EAAvBmB,KAAMC,EAAiBpB,EAAjBoB,YACrBC,EAAQF,EAAKG,kBAAkBC,MAAMC,IAAI,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,KAAF,OAC7CvB,EAAAC,EAAAC,cAAA,MAAIsB,IAAKD,EAAKE,GAAItB,UAAWC,IAAOsB,MAClC1B,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAIgB,EAAKI,OAAOC,MACpB5B,EAAAC,EAAAC,cAAA,YAAOqB,EAAKI,OAAOE,MADrB,KACoCN,EAAKO,YAAYC,QAGvD/B,EAAAC,EAAAC,cAAA,SAAIqB,EAAKS,aAKSC,EAAsBhB,EAAvCiB,gBAA0BC,EAAalB,EAAbkB,UAC3BrC,EAAmB,IAAZmC,EAAgB,KAAmB,IAAZA,EAAA,cAA+BA,EAAU,GAAzC,IAC9BlC,EAAOkC,IAAYE,EAAY,KAAxB,UAAwCF,EAAU,GAAlD,IAhB+BG,EAkBJpB,EAAKqB,KAAKC,aAApCC,EAlB8BH,EAkBrCL,MAAkBS,EAlBmBJ,EAkBnBI,YACnBT,EAAoB,IAAZE,EAAgBM,EAAhB,QAAoCN,EAApC,MAAiDM,EAE/D,OACEvC,EAAAC,EAAAC,cAACuC,EAAA,EAAD,KACEzC,EAAAC,EAAAC,cAACwC,EAAA,OAAD,KACE1C,EAAAC,EAAAC,cAAA,aAAQ6B,GACR/B,EAAAC,EAAAC,cAAA,QAAMyC,KAAK,cAAcC,QAASJ,IACjC1C,GAAQE,EAAAC,EAAAC,cAAA,QAAM2C,IAAI,OAAOC,KAAMhD,IAC/BC,GAAQC,EAAAC,EAAAC,cAAA,QAAM2C,IAAI,OAAOC,KAAM/C,KAElCC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBAAmB+B,EAAnB,IAA8BE,EAA9B,MACAnC,EAAAC,EAAAC,cAACG,EAAD,CAAWP,KAAMA,EAAMC,KAAMA,IAC7BC,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOc,OAAQA,GAC9BlB,EAAAC,EAAAC,cAACG,EAAD,CAAWP,KAAMA,EAAMC,KAAMA,OAjCrC,IAmDae,EAAK","file":"component---src-templates-list-js-f6349a222d2b6d4aeea7.js","sourcesContent":["import {Link} from 'gatsby';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './paginator.module.scss';\n\nconst Paginator = ({prev, next}) => (\n  <div className={styles.paginator}>\n    {prev && (\n      <Link to={prev} className={styles.prevLink}>\n        prev\n      </Link>\n    )}\n    {prev && next && '|'}\n    {next && (\n      <Link to={next} className={styles.nextLink}>\n        next\n      </Link>\n    )}\n  </div>\n);\n\nPaginator.propTypes = {\n  /** Previous URL. */\n  prev: PropTypes.string,\n  /** Next URL. */\n  next: PropTypes.string,\n};\n\nPaginator.defaultProps = {\n  prev: null,\n  next: null,\n};\n\nexport default Paginator;\n","import {graphql, Link} from 'gatsby';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Helmet} from 'react-helmet';\n\nimport Paginator from '../components/paginator';\nimport Layout from '../containers/layout';\n\nimport styles from './list.module.scss';\n\nconst ListTemplate = ({data, pageContext}) => {\n  const posts = data.allMarkdownRemark.edges.map(({node}) => (\n    <li key={node.id} className={styles.post}>\n      <article>\n        <h2>\n          <Link to={node.fields.slug}>\n            <time>{node.fields.date}</time>: {node.frontmatter.title}\n          </Link>\n        </h2>\n        <p>{node.excerpt}</p>\n      </article>\n    </li>\n  ));\n\n  const {currentListPage: current, listPages} = pageContext;\n  const prev = current === 1 ? null : current === 2 ? `/` : `/list/${current - 1}/`;\n  const next = current === listPages ? null : `/list/${current + 1}/`;\n\n  const {title: siteTitle, description} = data.site.siteMetadata;\n  const title = current === 1 ? siteTitle : `list ${current} | ${siteTitle}`;\n\n  return (\n    <Layout>\n      <Helmet>\n        <title>{title}</title>\n        <meta name=\"description\" content={description} />\n        {prev && <link rel=\"prev\" href={prev} />}\n        {next && <link rel=\"next\" href={next} />}\n      </Helmet>\n      <div>\n        <h1>{`post list [${current}/${listPages}]:`}</h1>\n        <Paginator prev={prev} next={next} />\n        <ul className={styles.posts}>{posts}</ul>\n        <Paginator prev={prev} next={next} />\n      </div>\n    </Layout>\n  );\n};\n\nListTemplate.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.shape({\n    currentListPage: PropTypes.number,\n    listPages: PropTypes.number,\n    previous: PropTypes.string,\n    next: PropTypes.string,\n  }).isRequired,\n};\n\nexport default ListTemplate;\n\nexport const query = graphql`\n  query($limit: Int!, $skip: Int!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n\n    allMarkdownRemark(sort: {fields: [fields___slug], order: DESC}, limit: $limit, skip: $skip) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n          }\n          fields {\n            slug\n            date\n          }\n          excerpt(truncate: true)\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}