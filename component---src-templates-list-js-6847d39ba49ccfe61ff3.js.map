{"version":3,"sources":["webpack:///./src/components/paginator.js","webpack:///./src/templates/list.js"],"names":["Paginator","prev","next","className","styles","paginator","to","prevLink","nextLink","defaultProps","ListTemplate","data","pageContext","posts","allMarkdownRemark","edges","map","node","key","id","post","fields","slug","date","frontmatter","title","excerpt","current","currentListPage","listPages","site","siteMetadata","siteTitle","description","Helmet","name","content","rel","href","query"],"mappings":"wKAMMA,EAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,KAAR,OAChB,yBAAKC,UAAWC,IAAOC,WACpBJ,GACC,kBAAC,OAAD,CAAMK,GAAIL,EAAME,UAAWC,IAAOG,UAAlC,QAIDN,GAAQC,GAAQ,IAChBA,GACC,kBAAC,OAAD,CAAMI,GAAIJ,EAAMC,UAAWC,IAAOI,UAAlC,UAcNR,EAAUS,aAAe,CACvBR,KAAM,KACNC,KAAM,MAGOF,Q,iCClCf,sCA2DeU,UAjDM,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,YACrBC,EAAQF,EAAKG,kBAAkBC,MAAMC,KAAI,gBAAEC,EAAF,EAAEA,KAAF,OAC7C,wBAAIC,IAAKD,EAAKE,GAAIhB,UAAWC,IAAOgB,MAClC,iCACE,4BACE,kBAAC,OAAD,CAAMd,GAAIW,EAAKI,OAAOC,MACpB,8BAAOL,EAAKI,OAAOE,MADrB,KACoCN,EAAKO,YAAYC,QAGvD,2BAAIR,EAAKS,cAKSC,EAAsBf,EAAvCgB,gBAA0BC,EAAajB,EAAbiB,UAC3B5B,EAAmB,IAAZ0B,EAAgB,KAAmB,IAAZA,EAAA,cAA+BA,EAAU,GAAzC,IAC9BzB,EAAOyB,IAAYE,EAAY,KAAxB,UAAwCF,EAAU,GAAlD,IAhB+B,EAkBJhB,EAAKmB,KAAKC,aAApCC,EAlB8B,EAkBrCP,MAAkBQ,EAlBmB,EAkBnBA,YACnBR,EAAoB,IAAZE,EAAgBK,EAAhB,QAAoCL,EAApC,MAAiDK,EAE/D,OACE,kBAAC,IAAD,KACE,kBAACE,EAAA,OAAD,KACE,+BAAQT,GACR,0BAAMU,KAAK,cAAcC,QAASH,IACjChC,GAAQ,0BAAMoC,IAAI,OAAOC,KAAMrC,IAC/BC,GAAQ,0BAAMmC,IAAI,OAAOC,KAAMpC,KAElC,6BACE,0CAAmByB,EAAnB,IAA8BE,EAA9B,MACA,kBAAC,EAAD,CAAW5B,KAAMA,EAAMC,KAAMA,IAC7B,wBAAIC,UAAWC,IAAOS,OAAQA,GAC9B,kBAAC,EAAD,CAAWZ,KAAMA,EAAMC,KAAMA,OAjCrC,IAmDaqC,EAAK","file":"component---src-templates-list-js-6847d39ba49ccfe61ff3.js","sourcesContent":["import {Link} from 'gatsby';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './paginator.module.scss';\n\nconst Paginator = ({prev, next}) => (\n  <div className={styles.paginator}>\n    {prev && (\n      <Link to={prev} className={styles.prevLink}>\n        prev\n      </Link>\n    )}\n    {prev && next && '|'}\n    {next && (\n      <Link to={next} className={styles.nextLink}>\n        next\n      </Link>\n    )}\n  </div>\n);\n\nPaginator.propTypes = {\n  /** Previous URL. */\n  prev: PropTypes.string,\n  /** Next URL. */\n  next: PropTypes.string,\n};\n\nPaginator.defaultProps = {\n  prev: null,\n  next: null,\n};\n\nexport default Paginator;\n","import {graphql, Link} from 'gatsby';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Helmet} from 'react-helmet';\n\nimport Paginator from '../components/paginator';\nimport Layout from '../containers/layout';\n\nimport styles from './list.module.scss';\n\nconst ListTemplate = ({data, pageContext}) => {\n  const posts = data.allMarkdownRemark.edges.map(({node}) => (\n    <li key={node.id} className={styles.post}>\n      <article>\n        <h2>\n          <Link to={node.fields.slug}>\n            <time>{node.fields.date}</time>: {node.frontmatter.title}\n          </Link>\n        </h2>\n        <p>{node.excerpt}</p>\n      </article>\n    </li>\n  ));\n\n  const {currentListPage: current, listPages} = pageContext;\n  const prev = current === 1 ? null : current === 2 ? `/` : `/list/${current - 1}/`;\n  const next = current === listPages ? null : `/list/${current + 1}/`;\n\n  const {title: siteTitle, description} = data.site.siteMetadata;\n  const title = current === 1 ? siteTitle : `list ${current} | ${siteTitle}`;\n\n  return (\n    <Layout>\n      <Helmet>\n        <title>{title}</title>\n        <meta name=\"description\" content={description} />\n        {prev && <link rel=\"prev\" href={prev} />}\n        {next && <link rel=\"next\" href={next} />}\n      </Helmet>\n      <div>\n        <h1>{`post list [${current}/${listPages}]:`}</h1>\n        <Paginator prev={prev} next={next} />\n        <ul className={styles.posts}>{posts}</ul>\n        <Paginator prev={prev} next={next} />\n      </div>\n    </Layout>\n  );\n};\n\nListTemplate.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.shape({\n    currentListPage: PropTypes.number,\n    listPages: PropTypes.number,\n    previous: PropTypes.string,\n    next: PropTypes.string,\n  }).isRequired,\n};\n\nexport default ListTemplate;\n\nexport const query = graphql`\n  query($limit: Int!, $skip: Int!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n\n    allMarkdownRemark(sort: {fields: [fields___slug], order: DESC}, limit: $limit, skip: $skip) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n          }\n          fields {\n            slug\n            date\n          }\n          excerpt(truncate: true)\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}