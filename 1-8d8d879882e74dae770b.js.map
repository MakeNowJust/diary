{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/lawn.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/lawn.module.scss","webpack:///./src/components/header.module.scss","webpack:///./src/components/footer.module.scss"],"names":["__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","createElement","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","MONTH_NAMES","Lawn","react_default","gatsby_browser_entry","lawnData","end","Date","setHours","setMinutes","setSeconds","setMilliseconds","start","getTime","setFullYear","getFullYear","setDate","getDate","getDay","totalDays","x","i","date","day","y","push","slug","size","GRASS_SIZE","_iterator","allMarkdownRemark","edges","_isArray","Array","isArray","_i","Symbol","iterator","_ref","length","next","done","value","node","_node$fields$date$spl","fields","split","map","s","Number","parseInt","m","Math","floor","textSize","months","lastMonth","getMonth","grasses","grass","classNames","activeness","min","max","log2","styles","active","onClick","navigate","inactive","month","key","className","text","MARGIN","Object","assign","toISOString","height","width","join","container","WIDTH","HEIGHT","_1488675482","Header","title","quote","navBar","navBarTitle","to","nav","index_es","icon","faSearch","lawn","Footer","author","github","year","_author$split","firstName","restNames","slice","copyright","href","Layout","Fragment","Helmet","lang","site","siteMetadata","language","header","footer","_1231361932","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","active0","active1","active2","active3"],"mappings":"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","file":"1-8d8d879882e74dae770b.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import {StaticQuery, graphql, navigate} from 'gatsby';\nimport React from 'react';\n\nimport styles from './lawn.module.scss';\n\nconst DAY_MS = 24 * 3600 * 1000;\n\nconst MARGIN = 2;\nconst GRASS_SIZE = 12;\nconst WIDTH = MARGIN + (GRASS_SIZE + MARGIN) * 54;\nconst HEIGHT = MARGIN + (GRASS_SIZE + MARGIN) * (7 + 1);\n\nconst MONTH_NAMES = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\nconst Lawn = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allMarkdownRemark(sort: {fields: [fields___slug], order: DESC}) {\n          edges {\n            node {\n              id\n              fields {\n                slug\n                date\n                textSize\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const lawnData = [];\n      const end = new Date();\n      end.setHours(0);\n      end.setMinutes(0);\n      end.setSeconds(0);\n      end.setMilliseconds(0);\n      const start = new Date(end.getTime());\n      start.setFullYear(start.getFullYear() - 1);\n      start.setDate(start.getDate() - start.getDay());\n      const totalDays = (end - start) / DAY_MS;\n\n      let x = MARGIN;\n      for (let i = 0; i <= totalDays; i++) {\n        const date = new Date(start.getTime());\n        date.setDate(date.getDate() + i);\n        const day = date.getDay();\n        const y = MARGIN + (GRASS_SIZE + MARGIN) * (day + 1);\n        lawnData.push({x, y, slug: null, size: 0, date});\n        if (day === 6) {\n          x += GRASS_SIZE + MARGIN;\n        }\n      }\n\n      for (const {node} of data.allMarkdownRemark.edges) {\n        const [y, m, d] = node.fields.date.split('-').map(s => Number.parseInt(s, 10));\n        const date = new Date(y, m - 1, d);\n        const i = Math.floor((date - start) / DAY_MS);\n\n        if (i >= lawnData.length) {\n          continue;\n        }\n        if (i < 0) {\n          break;\n        }\n\n        lawnData[i].slug = node.fields.slug;\n        lawnData[i].size += node.fields.textSize;\n      }\n\n      const months = [];\n      let lastMonth = lawnData[0].date.getMonth();\n\n      const grasses = lawnData.map(grass => {\n        const props = {};\n        const classNames = [];\n        if (grass.slug) {\n          const activeness = Math.min(Math.max(7, Math.floor(Math.log2(grass.size))), 10) - 7;\n          classNames.push(styles.active, styles[`active${activeness}`]);\n          props.onClick = () => navigate(grass.slug);\n        } else {\n          classNames.push(styles.inactive);\n        }\n\n        const month = grass.date.getMonth();\n        if (month !== lastMonth) {\n          months.push(\n            <text key={grass.date} className={styles.text} x={grass.x} y={MARGIN + GRASS_SIZE}>\n              {MONTH_NAMES[month]}\n            </text>,\n          );\n          lastMonth = month;\n        }\n\n        return (\n          <rect\n            key={grass.date.toISOString()}\n            height={GRASS_SIZE}\n            width={GRASS_SIZE}\n            x={grass.x}\n            y={grass.y}\n            className={classNames.join(' ')}\n            {...props}\n          >\n            {grass.slug && <title>{grass.slug}</title>}\n          </rect>\n        );\n      });\n\n      return (\n        <div className={styles.container}>\n          <svg width={`${WIDTH}px`} height={`${HEIGHT}px`}>\n            {months}\n            {grasses}\n          </svg>\n        </div>\n      );\n    }}\n  />\n);\n\nexport default Lawn;\n","import {Link} from 'gatsby';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSearch} from '@fortawesome/free-solid-svg-icons';\n\nimport Lawn from './lawn';\nimport styles from './header.module.scss';\n\nconst Header = ({title, quote}) => (\n  <header className={styles.container}>\n    <div className={styles.navBar}>\n      <h1 className={styles.navBarTitle}>\n        <Link to=\"/\">{title}</Link>\n      </h1>\n      <nav className={styles.nav}>\n        <ul>\n          <li>\n            <Link to=\"/search/\" title=\"検索\">\n              <FontAwesomeIcon icon={faSearch} />\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    </div>\n    <h1 className={styles.title}>\n      <Link to=\"/\">{title}</Link>\n    </h1>\n    <p className={styles.quote}>{quote}</p>\n    <Lawn />\n  </header>\n);\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  quote: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './footer.module.scss';\n\nconst Footer = ({author, github, year}) => {\n  const [firstName, ...restNames] = author.split(' ');\n\n  return (\n    <footer>\n      <p className={styles.copyright}>\n        © {year} {firstName} \"<a href={`https://github.com/${github}`}>{github}</a>\" {restNames}\n      </p>\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  author: PropTypes.string.isRequired,\n  github: PropTypes.string.isRequired,\n  year: PropTypes.string.isRequired,\n};\n\nexport default Footer;\n","import {StaticQuery, graphql} from 'gatsby';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Helmet} from 'react-helmet';\n\nimport Header from './header';\nimport Footer from './footer';\n\nimport 'modern-normalize';\nimport 'typeface-nova-mono';\nimport 'typeface-nova-square';\nimport 'typeface-raleway';\nimport 'katex/dist/katex.min.css';\n\nimport '../styles/global.scss';\n\nconst Layout = ({children}) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            quote\n            language\n            copyright {\n              author\n              github\n              year\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet>\n          <html lang={data.site.siteMetadata.language} />\n        </Helmet>\n        <Header title={data.site.siteMetadata.title} quote={data.site.siteMetadata.quote} />\n        <main>{children}</main>\n        <Footer\n          author={data.site.siteMetadata.copyright.author}\n          github={data.site.siteMetadata.copyright.github}\n          year={data.site.siteMetadata.copyright.year}\n        />\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"lawn-module--container--DwzWi\",\"active\":\"lawn-module--active--2gurl\",\"active0\":\"lawn-module--active0--2LG5N\",\"active1\":\"lawn-module--active1--yx9Gl\",\"active2\":\"lawn-module--active2--1bdHy\",\"active3\":\"lawn-module--active3--1UXgp\",\"inactive\":\"lawn-module--inactive--dKkDU\",\"text\":\"lawn-module--text--2VDsS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header-module--container--1n86u\",\"navBar\":\"header-module--nav-bar--1cWDd\",\"navBarTitle\":\"header-module--nav-bar-title--NqPj4\",\"nav\":\"header-module--nav--2TcPd\",\"title\":\"header-module--title--33kOg\",\"quote\":\"header-module--quote--TnsFz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"copyright\":\"footer-module--copyright--4FyNV\"};"],"sourceRoot":""}