{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/lawn.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/containers/layout.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","StaticQueryContext","React","createContext","props","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","MONTH_NAMES","Lawn","_ref","posts","today","lawnData","end","Date","getTime","setHours","setMinutes","setSeconds","setMilliseconds","start","setFullYear","getFullYear","setDate","getDate","getDay","totalDays","Math","floor","x","i","date","day","y","push","slug","size","GRASS_SIZE","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref2","length","next","done","value","_ref3","s","textSize","_s$split$map","split","map","Number","parseInt","m","months","lastMonth","getMonth","grasses","grass","classNames","activeness","min","max","log2","styles","active","onClick","navigate","inactive","month","react_default","key","className","text","MARGIN","Object","assign","toISOString","height","width","join","Fragment","container","WIDTH","HEIGHT","legend","box","active0","active1","active2","active3","arrayOf","shape","number","instanceOf","Header","title","quote","navBar","navBarTitle","gatsby_browser_entry","to","nav","index_es","icon","faSearch","lawn","Footer","author","github","year","_author$split","firstName","restNames","slice","copyright","href","Layout","Helmet","lang","site","siteMetadata","language","header","allMarkdownRemark","edges","node","fields","footer","_3260840036","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json"],"mappings":"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","file":"2-bccf43a80fb5ea08f392.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import {navigate} from 'gatsby';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './lawn.module.scss';\n\nconst DAY_MS = 24 * 3600 * 1000;\n\nconst MARGIN = 2;\nconst GRASS_SIZE = 12;\nconst WIDTH = MARGIN + (GRASS_SIZE + MARGIN) * 54;\nconst HEIGHT = MARGIN + (GRASS_SIZE + MARGIN) * (7 + 1);\n\nconst MONTH_NAMES = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\nconst Lawn = ({posts, today}) => {\n  const lawnData = [];\n  const end = new Date(today.getTime());\n  end.setHours(0);\n  end.setMinutes(0);\n  end.setSeconds(0);\n  end.setMilliseconds(0);\n  const start = new Date(end.getTime());\n  start.setFullYear(start.getFullYear() - 1);\n  start.setDate(start.getDate() - start.getDay());\n  const totalDays = Math.floor((end.getTime() - start.getTime()) / DAY_MS);\n\n  let x = MARGIN;\n  for (let i = 0; i <= totalDays; i++) {\n    const date = new Date(start.getTime());\n    date.setDate(date.getDate() + i);\n    const day = date.getDay();\n    const y = MARGIN + (GRASS_SIZE + MARGIN) * (day + 1);\n    lawnData.push({x, y, slug: null, size: 0, date});\n    if (day === 6) {\n      x += GRASS_SIZE + MARGIN;\n    }\n  }\n\n  for (const {date: s, slug, textSize} of posts) {\n    const [y, m, d] = s.split('-').map(s => Number.parseInt(s, 10));\n    const date = new Date(y, m - 1, d);\n    const i = Math.floor((date.getTime() - start.getTime()) / DAY_MS);\n\n    if (i >= lawnData.length) {\n      continue;\n    }\n\n    if (i < 0) {\n      break;\n    }\n\n    lawnData[i].slug = slug;\n    lawnData[i].size += textSize;\n  }\n\n  const months = [];\n  let lastMonth = lawnData[0].date.getMonth();\n\n  const grasses = lawnData.map(grass => {\n    const props = {};\n    const classNames = [];\n    if (grass.slug) {\n      const activeness = Math.min(Math.max(7, Math.floor(Math.log2(grass.size))), 10) - 7;\n      classNames.push(styles.active, styles[`active${activeness}`]);\n      props.onClick = () => navigate(grass.slug);\n    } else {\n      classNames.push(styles.inactive);\n    }\n\n    const month = grass.date.getMonth();\n    if (month !== lastMonth) {\n      months.push(\n        <text key={grass.date} className={styles.text} x={grass.x} y={MARGIN + GRASS_SIZE}>\n          {MONTH_NAMES[month]}\n        </text>,\n      );\n      lastMonth = month;\n    }\n\n    return (\n      <rect\n        key={grass.date.toISOString()}\n        height={GRASS_SIZE}\n        width={GRASS_SIZE}\n        x={grass.x}\n        y={grass.y}\n        className={classNames.join(' ')}\n        {...props}\n      >\n        {grass.slug && <title>{grass.slug}</title>}\n      </rect>\n    );\n  });\n\n  return (\n    <>\n      <div className={styles.container}>\n        <svg width={`${WIDTH}px`} height={`${HEIGHT}px`}>\n          {months}\n          {grasses}\n        </svg>\n      </div>\n      <ul className={styles.legend}>\n        <li>Less</li>\n        <li className={`${styles.inactive} ${styles.box}`} />\n        <li className={`${styles.active0} ${styles.box}`} />\n        <li className={`${styles.active1} ${styles.box}`} />\n        <li className={`${styles.active2} ${styles.box}`} />\n        <li className={`${styles.active3} ${styles.box}`} />\n        <li>More</li>\n      </ul>\n    </>\n  );\n};\n\nLawn.propTypes = {\n  /** Post summaries. They should be sorted descending date order. */\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      date: PropTypes.string.isRequired,\n      slug: PropTypes.string.isRequired,\n      textSize: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n  /** A `Date` object which means rightmost of this lawn. */\n  today: PropTypes.instanceOf(Date).isRequired,\n};\n\nexport default Lawn;\n","import {Link} from 'gatsby';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSearch} from '@fortawesome/free-solid-svg-icons';\n\nimport Lawn from './lawn';\nimport styles from './header.module.scss';\n\nconst Header = ({title, quote, posts, today}) => (\n  <header className={styles.container}>\n    <div className={styles.navBar}>\n      <h1 className={styles.navBarTitle}>\n        <Link to=\"/\">{title}</Link>\n      </h1>\n      <nav className={styles.nav}>\n        <ul>\n          <li>\n            <Link to=\"/search/\" title=\"検索\">\n              <FontAwesomeIcon icon={faSearch} />\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    </div>\n    <h1 className={styles.title}>\n      <Link to=\"/\">{title}</Link>\n    </h1>\n    <p className={styles.quote}>{quote}</p>\n    <Lawn posts={posts} today={today} />\n  </header>\n);\n\nHeader.propTypes = {\n  /** A diary title. */\n  title: PropTypes.string.isRequired,\n  /** A quote show under title. */\n  quote: PropTypes.string.isRequired,\n  /** Post summaries. It passes to `Lawn`. */\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      date: PropTypes.string.isRequired,\n      slug: PropTypes.string.isRequired,\n      textSize: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n  /** A today `Date` object. It passes to `Lawn`. */\n  today: PropTypes.instanceOf(Date).isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './footer.module.scss';\n\nconst Footer = ({author, github, year}) => {\n  const [firstName, ...restNames] = author.split(' ');\n\n  return (\n    <footer>\n      <p className={styles.copyright}>\n        © {year} {firstName} \"<a href={`https://github.com/${github}`}>{github}</a>\"{' '}\n        {restNames.join(' ')}\n      </p>\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  /** A diary author. */\n  author: PropTypes.string.isRequired,\n  /** A diary author's GitHub user name. */\n  github: PropTypes.string.isRequired,\n  /** A copyright year. */\n  year: PropTypes.string.isRequired,\n};\n\nexport default Footer;\n","import {StaticQuery, graphql} from 'gatsby';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Helmet} from 'react-helmet';\n\nimport Header from '../components/header';\nimport Footer from '../components/footer';\n\nimport 'modern-normalize';\nimport 'typeface-nova-mono';\nimport 'typeface-nova-square';\nimport 'typeface-raleway';\nimport 'katex/dist/katex.min.css';\n\nimport '../styles/global.scss';\n\nconst Layout = ({children}) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            quote\n            language\n            copyright {\n              author\n              github\n              year\n            }\n          }\n        }\n\n        allMarkdownRemark(sort: {fields: [fields___slug], order: DESC}) {\n          edges {\n            node {\n              fields {\n                date\n                slug\n                textSize\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet>\n          <html lang={data.site.siteMetadata.language} />\n        </Helmet>\n        <Header\n          title={data.site.siteMetadata.title}\n          quote={data.site.siteMetadata.quote}\n          posts={data.allMarkdownRemark.edges.map(({node}) => ({\n            date: node.fields.date,\n            slug: node.fields.slug,\n            textSize: node.fields.textSize,\n          }))}\n          today={new Date()}\n        />\n        <main>{children}</main>\n        <Footer\n          author={data.site.siteMetadata.copyright.author}\n          github={data.site.siteMetadata.copyright.github}\n          year={data.site.siteMetadata.copyright.year}\n        />\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}