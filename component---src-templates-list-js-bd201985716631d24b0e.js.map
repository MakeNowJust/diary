{"version":3,"file":"component---src-templates-list-js-bd201985716631d24b0e.js","mappings":"kLAMMA,EAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,KAAR,OAChB,uBAAKC,UCNgB,sCDOlBF,GACC,gBAAC,EAAAG,KAAD,CAAMC,GAAIJ,EAAME,UCPA,sCDOhB,QAIDF,GAAQC,GAAQ,IAChBA,GACC,gBAAC,EAAAE,KAAD,CAAMC,GAAIH,EAAMC,UCZA,sCDYhB,UAcNH,EAAUM,aAAe,CACvBL,KAAM,KACNC,KAAM,MAGR,Q,UEyBA,EAjDqB,SAAC,GAAyB,IAAxBK,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,YACrBC,EAAQF,EAAKG,kBAAkBC,MAAMC,KAAI,gBAAEC,EAAF,EAAEA,KAAF,OAC7C,sBAAIC,IAAKD,EAAKE,GAAIZ,UCVJ,4BDWZ,+BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIQ,EAAKG,OAAOC,MACpB,4BAAOJ,EAAKG,OAAOE,MADrB,KACoCL,EAAKM,YAAYC,QAGvD,yBAAIP,EAAKQ,cAKSC,EAAsBd,EAAvCe,gBAA0BC,EAAahB,EAAbgB,UAC3BvB,EAAmB,IAAZqB,EAAgB,KAAmB,IAAZA,EAAA,cAA+BA,EAAU,GAAzC,IAC9BpB,EAAOoB,IAAYE,EAAY,KAAxB,UAAwCF,EAAU,GAAlD,IAEb,EAAwCf,EAAKkB,KAAKC,aAApCC,EAAd,EAAOP,MAAkBQ,EAAzB,EAAyBA,YACnBR,EAAoB,IAAZE,EAAgBK,EAAhB,QAAoCL,EAApC,MAAiDK,EAE/D,OACE,gBAAC,IAAD,KACE,gBAACE,EAAA,EAAD,KACE,6BAAQT,GACR,wBAAMU,KAAK,cAAcC,QAASH,IACjC3B,GAAQ,wBAAM+B,IAAI,OAAOC,KAAMhC,IAC/BC,GAAQ,wBAAM8B,IAAI,OAAOC,KAAM/B,KAElC,2BACE,wCAAmBoB,EAAnB,IAA8BE,EAA9B,MACA,gBAAC,EAAD,CAAWvB,KAAMA,EAAMC,KAAMA,IAC7B,sBAAIC,UCzCO,6BDyCmBM,GAC9B,gBAAC,EAAD,CAAWR,KAAMA,EAAMC,KAAMA","sources":["webpack://diary/./src/components/paginator.js","webpack://diary/./src/components/paginator.module.scss","webpack://diary/./src/templates/list.js","webpack://diary/./src/templates/list.module.scss"],"sourcesContent":["import {Link} from 'gatsby';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as styles from './paginator.module.scss';\n\nconst Paginator = ({prev, next}) => (\n  <div className={styles.paginator}>\n    {prev && (\n      <Link to={prev} className={styles.prevLink}>\n        prev\n      </Link>\n    )}\n    {prev && next && '|'}\n    {next && (\n      <Link to={next} className={styles.nextLink}>\n        next\n      </Link>\n    )}\n  </div>\n);\n\nPaginator.propTypes = {\n  /** Previous URL. */\n  prev: PropTypes.string,\n  /** Next URL. */\n  next: PropTypes.string,\n};\n\nPaginator.defaultProps = {\n  prev: null,\n  next: null,\n};\n\nexport default Paginator;\n","// extracted by mini-css-extract-plugin\nexport var paginator = \"paginator-module--paginator--3Zun9\";\nexport var prevLink = \"paginator-module--prev-link--3b0Yb\";\nexport var nextLink = \"paginator-module--next-link--31Qu1\";","import {graphql, Link} from 'gatsby';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Helmet} from 'react-helmet';\n\nimport Paginator from '../components/paginator';\nimport Layout from '../containers/layout';\n\nimport * as styles from './list.module.scss';\n\nconst ListTemplate = ({data, pageContext}) => {\n  const posts = data.allMarkdownRemark.edges.map(({node}) => (\n    <li key={node.id} className={styles.post}>\n      <article>\n        <h2>\n          <Link to={node.fields.slug}>\n            <time>{node.fields.date}</time>: {node.frontmatter.title}\n          </Link>\n        </h2>\n        <p>{node.excerpt}</p>\n      </article>\n    </li>\n  ));\n\n  const {currentListPage: current, listPages} = pageContext;\n  const prev = current === 1 ? null : current === 2 ? `/` : `/list/${current - 1}/`;\n  const next = current === listPages ? null : `/list/${current + 1}/`;\n\n  const {title: siteTitle, description} = data.site.siteMetadata;\n  const title = current === 1 ? siteTitle : `list ${current} | ${siteTitle}`;\n\n  return (\n    <Layout>\n      <Helmet>\n        <title>{title}</title>\n        <meta name=\"description\" content={description} />\n        {prev && <link rel=\"prev\" href={prev} />}\n        {next && <link rel=\"next\" href={next} />}\n      </Helmet>\n      <div>\n        <h1>{`post list [${current}/${listPages}]:`}</h1>\n        <Paginator prev={prev} next={next} />\n        <ul className={styles.posts}>{posts}</ul>\n        <Paginator prev={prev} next={next} />\n      </div>\n    </Layout>\n  );\n};\n\nListTemplate.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.shape({\n    currentListPage: PropTypes.number,\n    listPages: PropTypes.number,\n    previous: PropTypes.string,\n    next: PropTypes.string,\n  }).isRequired,\n};\n\nexport default ListTemplate;\n\nexport const query = graphql`\n  query ($limit: Int!, $skip: Int!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n\n    allMarkdownRemark(sort: {fields: [fields___slug], order: DESC}, limit: $limit, skip: $skip) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n          }\n          fields {\n            slug\n            date\n          }\n          excerpt(truncate: true)\n        }\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nexport var posts = \"list-module--posts--2eLH4\";\nexport var post = \"list-module--post--14Cll\";"],"names":["Paginator","prev","next","className","Link","to","defaultProps","data","pageContext","posts","allMarkdownRemark","edges","map","node","key","id","fields","slug","date","frontmatter","title","excerpt","current","currentListPage","listPages","site","siteMetadata","siteTitle","description","Helmet","name","content","rel","href"],"sourceRoot":""}