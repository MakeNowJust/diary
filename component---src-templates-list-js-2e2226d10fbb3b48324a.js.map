{"version":3,"file":"component---src-templates-list-js-2e2226d10fbb3b48324a.js","mappings":"kMA+BA,MAzBA,SAAkBA,GAA8B,IAA7B,KAACC,EAAO,KAAI,KAAEC,EAAO,MAAKF,EAC3C,OACEG,EAAAA,cAAA,OAAKC,UCNc,sCDOhBH,GACCE,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAIL,EAAMG,UCPF,sCDO8B,QAI7CH,GAAQC,GAAQ,IAChBA,GACCC,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAIJ,EAAME,UCfF,sCDe8B,QAMpD,E,oBE4BO,SAASG,EAAIC,GAAuB,IAAtB,KAACC,EAAI,YAAEC,GAAYF,EACtC,MAAOG,gBAAiBC,EAAO,UAAEC,GAAaH,EACxCT,EAAmB,IAAZW,EAAgB,KAAmB,IAAZA,EAAgB,IAAM,SAASA,EAAU,KACvEV,EAAOU,IAAYC,EAAY,KAAO,SAASD,EAAU,MAExDE,MAAOC,EAAS,YAAEC,GAAeP,EAAKQ,KAAKC,aAC5CJ,EAAoB,IAAZF,EAAgBG,EAAY,QAAQH,OAAaG,IAE/D,OACEZ,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACgB,EAAAA,EAAU,MACXhB,EAAAA,cAAA,aAAQW,GACRX,EAAAA,cAAA,QAAMiB,KAAK,cAAcC,QAASL,IACjCf,GAAQE,EAAAA,cAAA,QAAMmB,IAAI,OAAOC,KAAMtB,IAC/BC,GAAQC,EAAAA,cAAA,QAAMmB,IAAI,OAAOC,KAAMrB,IAGtC,CA6BA,MAtFA,SAAqBF,GAAuB,IAAtB,KAACS,EAAI,YAAEC,GAAYV,EACvC,MAAMwB,EAAQf,EAAKgB,kBAAkBC,MAAMC,KAAIC,IAAA,IAAC,KAACC,GAAKD,EAAA,OACpDzB,EAAAA,cAAA,MAAI2B,IAAKD,EAAKE,GAAI3B,UCXJ,4BDYZD,EAAAA,cAAA,eACEA,EAAAA,cAAA,UACEA,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAIuB,EAAKG,OAAOC,MACpB9B,EAAAA,cAAA,YAAO0B,EAAKG,OAAOE,MAAY,KAAGL,EAAKM,YAAYrB,QAGvDX,EAAAA,cAAA,SAAI0B,EAAKO,UAER,KAGAzB,gBAAiBC,EAAO,UAAEC,GAAaH,EACxCT,EAAmB,IAAZW,EAAgB,KAAmB,IAAZA,EAAgB,IAAM,SAASA,EAAU,KACvEV,EAAOU,IAAYC,EAAY,KAAO,SAASD,EAAU,KAE/D,OACET,EAAAA,cAACkC,EAAAA,EAAM,KACLlC,EAAAA,cAAA,WACEA,EAAAA,cAAA,UAAK,cAAcS,KAAWC,OAC9BV,EAAAA,cAACmC,EAAS,CAACrC,KAAMA,EAAMC,KAAMA,IAC7BC,EAAAA,cAAA,MAAIC,UC/BO,6BD+BmBoB,GAC9BrB,EAAAA,cAACmC,EAAS,CAACrC,KAAMA,EAAMC,KAAMA,KAIrC,C","sources":["webpack://diary/./src/components/paginator.js","webpack://diary/./src/components/paginator.module.scss","webpack://diary/./src/templates/list.js","webpack://diary/./src/templates/list.module.scss"],"sourcesContent":["import {Link} from 'gatsby';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as styles from './paginator.module.scss';\n\nfunction Paginator({prev = null, next = null}) {\n  return (\n    <div className={styles.paginator}>\n      {prev && (\n        <Link to={prev} className={styles.prevLink}>\n          prev\n        </Link>\n      )}\n      {prev && next && '|'}\n      {next && (\n        <Link to={next} className={styles.nextLink}>\n          next\n        </Link>\n      )}\n    </div>\n  );\n}\n\nPaginator.propTypes = {\n  /** Previous URL. */\n  prev: PropTypes.string,\n  /** Next URL. */\n  next: PropTypes.string,\n};\n\nexport default Paginator;\n","// extracted by mini-css-extract-plugin\nexport var nextLink = \"paginator-module--next-link--bd2a0\";\nexport var paginator = \"paginator-module--paginator--05f6a\";\nexport var prevLink = \"paginator-module--prev-link--9e4f4\";","import {graphql, Link} from 'gatsby';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Paginator from '../components/paginator';\nimport Layout from '../containers/layout';\nimport LayoutHead from '../containers/layout-head';\n\nimport * as styles from './list.module.scss';\n\nfunction ListTemplate({data, pageContext}) {\n  const posts = data.allMarkdownRemark.edges.map(({node}) => (\n    <li key={node.id} className={styles.post}>\n      <article>\n        <h2>\n          <Link to={node.fields.slug}>\n            <time>{node.fields.date}</time>: {node.frontmatter.title}\n          </Link>\n        </h2>\n        <p>{node.excerpt}</p>\n      </article>\n    </li>\n  ));\n\n  const {currentListPage: current, listPages} = pageContext;\n  const prev = current === 1 ? null : current === 2 ? `/` : `/list/${current - 1}/`;\n  const next = current === listPages ? null : `/list/${current + 1}/`;\n\n  return (\n    <Layout>\n      <div>\n        <h1>{`Post List [${current}/${listPages}]:`}</h1>\n        <Paginator prev={prev} next={next} />\n        <ul className={styles.posts}>{posts}</ul>\n        <Paginator prev={prev} next={next} />\n      </div>\n    </Layout>\n  );\n}\n\nListTemplate.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.shape({\n    currentListPage: PropTypes.number,\n    listPages: PropTypes.number,\n    previous: PropTypes.string,\n    next: PropTypes.string,\n  }).isRequired,\n};\n\nexport function Head({data, pageContext}) {\n  const {currentListPage: current, listPages} = pageContext;\n  const prev = current === 1 ? null : current === 2 ? `/` : `/list/${current - 1}/`;\n  const next = current === listPages ? null : `/list/${current + 1}/`;\n\n  const {title: siteTitle, description} = data.site.siteMetadata;\n  const title = current === 1 ? siteTitle : `List ${current} | ${siteTitle}`;\n\n  return (\n    <>\n      <LayoutHead />\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      {prev && <link rel=\"prev\" href={prev} />}\n      {next && <link rel=\"next\" href={next} />}\n    </>\n  );\n}\n\nexport const query = graphql`\n  query ($limit: Int!, $skip: Int!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n\n    allMarkdownRemark(sort: {fields: {slug: DESC}}, limit: $limit, skip: $skip) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n          }\n          fields {\n            slug\n            date\n          }\n          excerpt(truncate: true)\n        }\n      }\n    }\n  }\n`;\n\nexport default ListTemplate;\n","// extracted by mini-css-extract-plugin\nexport var post = \"list-module--post--70bdc\";\nexport var posts = \"list-module--posts--fa191\";"],"names":["_ref","prev","next","React","className","Link","to","Head","_ref3","data","pageContext","currentListPage","current","listPages","title","siteTitle","description","site","siteMetadata","LayoutHead","name","content","rel","href","posts","allMarkdownRemark","edges","map","_ref2","node","key","id","fields","slug","date","frontmatter","excerpt","Layout","Paginator"],"sourceRoot":""}